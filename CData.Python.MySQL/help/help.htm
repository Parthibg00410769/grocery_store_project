


<!DOCTYPE html><html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
	<link rel="icon" href="/favicon.ico" type="image/x-icon">
    
  
  <title>CData Python Connector for MySQL - CData Python Connector for MySQL</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="description" 	content="CData Python Connector for MySQL - RSBMysql - CData Python Connector for MySQL: The connection string properties describe the various options that can be used to establish a connection." />
	<meta name="author" 		content="www.cdata.com"> 
	<meta name="generator" 		content="CData Python Connector for MySQL (CData Python Connector for MySQL  [DMMJ-A Build 8565]);">
	

    <meta http-equiv="X-UA-Compatible" content="IE=edge" >
    <!--if it works on the readme.htm file-->                  <link rel="stylesheet" type="text/css" href="./lib/bootstrap/bootstrap.min.css"/> 
        <link rel="stylesheet" type="text/css" href="./lib/syntaxhighlighter-3.0.83/styles/shCore.css" />
        <link rel="stylesheet" type="text/css" href="./lib/syntaxhighlighter-3.0.83/styles/shThemeDefault.css" />
        <link rel="stylesheet" type="text/css" href="./lib/help.css" />
        <link rel="stylesheet" type="text/css" href="./lib/tree2.css" />
      
    </head>
<body>
	
  <div class="header">
    <a href='http://www.cdata.com/'>
    <div id="whlogo">&nbsp;</div>
    </a>
    <div id='whheader'>
    	<h1>CData Python Connector for MySQL</h1>
    	<span class="phones">Build 23.0.8565</span>
    	</div>
    <div id="hamburger-menu"></div>
  </div>
    <div border="0" cellpadding="0" cellspacing="0" id="whlayout">
        
        <div id="whcontent">
        <!-- TABLE OF CONTENTS -->            <div height="100%" id=whleftcol width='1%' > 
                <div style="width:340px;"></div> 
                <div id='whsizer' style='width:340px;'>
		

































<!--if it works on the readme.htm file-->

    
    

    

<div id="whtoc" style="display:none;">

<!--  BEGIN TOC CONTENT -->
<UL class="nav">


  <LI class="expanded">
  <a href="#default" style="font-weight: bold;">CData Python Connector for MySQL</a>

  <UL>








  
    <LI>
      <a href="#pg_startintropy">Getting Started</a>





  <UL>




  
    <LI>
      <a href="#pg_pyinstallation"> Package Installation</a>








  
    <LI>
      <a href="#pg_connectionpy"> Establishing a Connection</a>








  
    <LI>
      <a href="#pg_changelog"> Changelog</a>








  </UL>

  
    <LI>
      <a href="#pg_usagepy">Using the Connector</a>





  <UL>




  
    <LI>
      <a href="#pg_usagescriptconnectpy"> Connecting</a>








  
    <LI>
      <a href="#pg_usagescriptquerypy"> Querying Data</a>








  
    <LI>
      <a href="#pg_usagescriptupdatepy"> Modifying Data</a>








  
    <LI>
      <a href="#pg_usagescriptprocpy"> Calling Stored Procedures</a>








  
    <LI>
      <a href="#pg_usagescriptbatchpy"> Batch Processing</a>








  </UL>

  
    <LI>
      <a href="#pg_usagetoolsintropy">Using from Tools</a>





  <UL>




  
    <LI>
      <a href="#pg_usageORMintropy"> From SQLAlchemy</a>





  <UL>




  
    <LI>
      <a href="#pg_usageORMconnectpy"> Connecting</a>








  
    <LI>
      <a href="#pg_usageORMreflectpy"> Reflecting Metadata</a>








  
    <LI>
      <a href="#pg_usageORMquerypy"> Querying Data</a>





  <UL>




  
    <LI>
      <a href="#pg_usageORMjoinspy"> Executing JOINs</a>








  
    <LI>
      <a href="#pg_usageORMotherpy"> Other SQL Clauses</a>








  
    <LI>
      <a href="#pg_usageORMaggpy"> Aggregate Functions</a>








  </UL>

  
    <LI>
      <a href="#pg_usageORMupdatepy"> Modifying Data</a>








  </UL>

  
    <LI>
      <a href="#pg_usagetoolspandaspy"> From Pandas</a>








  
    <LI>
      <a href="#pg_usagetoolsmatplotlibpy"> From Matplotlib</a>








  
    <LI>
      <a href="#pg_usagetoolspetlpy"> From Petl</a>








  </UL>

  
    <LI>
      <a href="#pg_systemtablesintropy">Schema Discovery</a>





  <UL>




  
    <LI>
      <a href="#pg_systemtablespy"> Tables and Views</a>








  
    <LI>
      <a href="#pg_systemcolumnspy"> Columns</a>








  
    <LI>
      <a href="#pg_systemprocspy"> Procedures</a>








  </UL>

  
    <LI>
      <a href="#pg_advancedfeatures">Advanced Features</a>





  <UL>




  
    <LI>
      <a href="#pg_advancedssl"> SSL Configuration</a>








  
    <LI>
      <a href="#pg_advancedproxy"> Firewall and Proxy</a>








  
    <LI>
      <a href="#pg_advancedlogging"> Logging</a>







  </UL>





  <LI>
    <a href="#Connection">Connection String Options</a>
  
  <UL>






<li>
<a href="#RSBMysql_c_Authentication">Authentication</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_AuthScheme">AuthScheme</a>



		
<LI>

<a href="#RSBMysql_p_Server">Server</a>



		
<LI>

<a href="#RSBMysql_p_Port">Port</a>



		
<LI>

<a href="#RSBMysql_p_User">User</a>



		
<LI>

<a href="#RSBMysql_p_Password">Password</a>



		
<LI>

<a href="#RSBMysql_p_Database">Database</a>



		
<LI>

<a href="#RSBMysql_p_Domain">Domain</a>



		
<LI>

<a href="#RSBMysql_p_NTLMVersion">NTLMVersion</a>



		
<LI>

<a href="#RSBMysql_p_IntegratedUser">IntegratedUser</a>



		
<LI>

<a href="#RSBMysql_p_UseSSL">UseSSL</a>


</UL>




<li>
<a href="#RSBMysql_c_AWSAuthentication">AWS Authentication</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_AWSAccessKey">AWSAccessKey</a>



		
<LI>

<a href="#RSBMysql_p_AWSSecretKey">AWSSecretKey</a>



		
<LI>

<a href="#RSBMysql_p_AWSRoleARN">AWSRoleARN</a>


</UL>




<li>
<a href="#RSBMysql_c_AzureAuthentication">Azure Authentication</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_AzureTenant">AzureTenant</a>


</UL>




<li>
<a href="#RSBMysql_c_OAuth">OAuth</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_InitiateOAuth">InitiateOAuth</a>



		
<LI>

<a href="#RSBMysql_p_OAuthClientId">OAuthClientId</a>



		
<LI>

<a href="#RSBMysql_p_OAuthClientSecret">OAuthClientSecret</a>



		
<LI>

<a href="#RSBMysql_p_OAuthSettingsLocation">OAuthSettingsLocation</a>



		
<LI>

<a href="#RSBMysql_p_OAuthVerifier">OAuthVerifier</a>


</UL>




<li>
<a href="#RSBMysql_c_SSL">SSL</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_SSLClientCert">SSLClientCert</a>



		
<LI>

<a href="#RSBMysql_p_SSLClientCertType">SSLClientCertType</a>



		
<LI>

<a href="#RSBMysql_p_SSLClientCertPassword">SSLClientCertPassword</a>



		
<LI>

<a href="#RSBMysql_p_SSLClientCertSubject">SSLClientCertSubject</a>



		
<LI>

<a href="#RSBMysql_p_SSLServerCert">SSLServerCert</a>


</UL>




<li>
<a href="#RSBMysql_c_SSH">SSH</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_SSHAuthMode">SSHAuthMode</a>



		
<LI>

<a href="#RSBMysql_p_SSHClientCert">SSHClientCert</a>



		
<LI>

<a href="#RSBMysql_p_SSHClientCertPassword">SSHClientCertPassword</a>



		
<LI>

<a href="#RSBMysql_p_SSHClientCertSubject">SSHClientCertSubject</a>



		
<LI>

<a href="#RSBMysql_p_SSHClientCertType">SSHClientCertType</a>



		
<LI>

<a href="#RSBMysql_p_SSHServer">SSHServer</a>



		
<LI>

<a href="#RSBMysql_p_SSHPort">SSHPort</a>



		
<LI>

<a href="#RSBMysql_p_SSHUser">SSHUser</a>



		
<LI>

<a href="#RSBMysql_p_SSHPassword">SSHPassword</a>



		
<LI>

<a href="#RSBMysql_p_SSHServerFingerprint">SSHServerFingerprint</a>



		
<LI>

<a href="#RSBMysql_p_UseSSH">UseSSH</a>


</UL>




<li>
<a href="#RSBMysql_c_Firewall">Firewall</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_FirewallType">FirewallType</a>



		
<LI>

<a href="#RSBMysql_p_FirewallServer">FirewallServer</a>



		
<LI>

<a href="#RSBMysql_p_FirewallPort">FirewallPort</a>



		
<LI>

<a href="#RSBMysql_p_FirewallUser">FirewallUser</a>



		
<LI>

<a href="#RSBMysql_p_FirewallPassword">FirewallPassword</a>


</UL>




<li>
<a href="#RSBMysql_c_Proxy">Proxy</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_ProxyAutoDetect">ProxyAutoDetect</a>



		
<LI>

<a href="#RSBMysql_p_ProxyServer">ProxyServer</a>



		
<LI>

<a href="#RSBMysql_p_ProxyPort">ProxyPort</a>



		
<LI>

<a href="#RSBMysql_p_ProxyAuthScheme">ProxyAuthScheme</a>



		
<LI>

<a href="#RSBMysql_p_ProxyUser">ProxyUser</a>



		
<LI>

<a href="#RSBMysql_p_ProxyPassword">ProxyPassword</a>



		
<LI>

<a href="#RSBMysql_p_ProxySSLType">ProxySSLType</a>



		
<LI>

<a href="#RSBMysql_p_ProxyExceptions">ProxyExceptions</a>


</UL>




<li>
<a href="#RSBMysql_c_Logging">Logging</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_Logfile">Logfile</a>



		
<LI>

<a href="#RSBMysql_p_Verbosity">Verbosity</a>



		
<LI>

<a href="#RSBMysql_p_LogModules">LogModules</a>



		
<LI>

<a href="#RSBMysql_p_MaxLogFileSize">MaxLogFileSize</a>



		
<LI>

<a href="#RSBMysql_p_MaxLogFileCount">MaxLogFileCount</a>


</UL>




<li>
<a href="#RSBMysql_c_Schema">Schema</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_Location">Location</a>



		
<LI>

<a href="#RSBMysql_p_BrowsableSchemas">BrowsableSchemas</a>



		
<LI>

<a href="#RSBMysql_p_Tables">Tables</a>



		
<LI>

<a href="#RSBMysql_p_Views">Views</a>


</UL>




<li>
<a href="#RSBMysql_c_Caching">Caching</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_AutoCache">AutoCache</a>



		
<LI>

<a href="#RSBMysql_p_CacheProvider">CacheProvider</a>



		
<LI>

<a href="#RSBMysql_p_CacheDriver">CacheDriver</a>



		
<LI>

<a href="#RSBMysql_p_CacheConnection">CacheConnection</a>



		
<LI>

<a href="#RSBMysql_p_CacheLocation">CacheLocation</a>



		
<LI>

<a href="#RSBMysql_p_CacheTolerance">CacheTolerance</a>



		
<LI>

<a href="#RSBMysql_p_Offline">Offline</a>



		
<LI>

<a href="#RSBMysql_p_CacheMetadata">CacheMetadata</a>


</UL>




<li>
<a href="#RSBMysql_c_Miscellaneous">Miscellaneous</a>
<UL>
		
<LI>

<a href="#RSBMysql_p_AllowUserVariables">AllowUserVariables</a>



		
<LI>

<a href="#RSBMysql_p_Characterset">Characterset</a>



		
<LI>

<a href="#RSBMysql_p_MaxRows">MaxRows</a>



		
<LI>

<a href="#RSBMysql_p_Other">Other</a>



		
<LI>

<a href="#RSBMysql_p_QueryPassthrough">QueryPassthrough</a>



		
<LI>

<a href="#RSBMysql_p_Readonly">Readonly</a>



		
<LI>

<a href="#RSBMysql_p_RTK">RTK</a>



		
<LI>

<a href="#RSBMysql_p_ServerTimeZone">ServerTimeZone</a>



		
<LI>

<a href="#RSBMysql_p_Timeout">Timeout</a>



		
<LI>

<a href="#RSBMysql_p_ZeroDatesToNull">ZeroDatesToNull</a>


</UL>












	</UL>





</UL>

<!-- END TOC CONTENT -->

</div>              
        
                </div>
            </div>
        <!-- /TABLE OF CONTENTS -->    
        <div id="whrightcol">
				<div style='margin:0; padding:0;'>
						
						<div id=newver ></div>
				</div>
				
				<div id=whiframe>
               
					<! -- BEGIN CONTENT -->					<div id="wrapper">
						<div id="content">
							<h1 id="default">CData Python Connector for MySQL</h1>
              <!-- <span id=whtitle>
              &prodname; - Build &prod.vermaj;.&prod.vermin;.&prod:verint;
              </span> -->



<p>
<h2>Overview</h2>

</p>

<p>The CData Python Connector for MySQL allows developers to write Python scripts with connectivity to MySQL. The connector wraps the complexity of accessing MySQL data in an interface commonly used by python connectors to common database systems.


<h2>Key Features</h2>
</p>

<p><ul><li>A variety of WHL files or a single TAR.GZ file that accommodate several execution environments after installation with "pip install".</li><li>Supported for Python versions 3.7, 3.8, 3.9, and 3.10, within both Windows and Linux environments. Python 3.8, 3.9, and 3.10 distributions on Mac are also supported.</li><li>Write and execute SQL queries to fetch and update data in MySQL.</li><li>Custom dialect class that enables SQLAlchemy 1.3 and 1.4 to use this connector.</li></ul>


<h2>Getting Started</h2>
</p>

<p>See <a href="#pg_startintropy">Getting Started</a> to install the connector to your python distribution and to create a basic connection to MySQL.


<h2>Using the Python Connector/Using from Tools</h2>
</p>

<p>See <a href="#pg_usagepy">Using the Connector</a> for examples of executing basic SELECT, INSERT, UPDATE, DELETE, and EXECUTE queries with the module's provided classes. </p>

<p>See <a href="#pg_usagetoolsintropy">Using from Tools</a> to connect MySQL data to tools such as Pandas or Petl.


<h2>SQLAlchemy ORM</h2>
</p>

<p>SQLAlchemy can be leveraged to model the tables in MySQL with mapped classes. See <a href="#pg_usageORMintropy">From SQLAlchemy</a> for instructions for configuring the Python connector with SQLAlchemy.


<h2>Pandas</h2>
</p>

<p>Pandas' DataFrames can be used alongside the connector to generate analytical graphics. See <a href="#pg_usagetoolspandaspy">From Pandas</a> for a guide.


<h2>Schema Discovery</h2>
</p>

<p>See <a href="#pg_systemtablesintro">Schema Discovery</a> to query the provided system tables, which allows users to discover the available tables, views, and stored procedure, alongside additional information about their columns or parameters.


<h2>Advanced Features</h2>
</p>

<p><a href="#pg_advancedfeatures">Advanced Features</a> details additional features supported by the provider, such as , ssl configuration, remoting, firewall/proxy settings, and advanced logging.</p>

<p>



<h2>Connection String Options</h2>
</p>

<p>The <a href="#Connection">Connection</a> properties describe the various options that can be used to establish a connection.
</p>





  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Getting Started" desc="CData Python Connector for MySQL - RSBMysql - Getting Started: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Getting Started</h1>
       

    <div class="chapter_content" id="pg_startintropy">

<p>
<h2>Connecting to MySQL</h2>

</p>

<p><a href="#pg_pyinstallation">Package Installation</a> explains the available WHL and TAR.GZ files for the supported environments, as well as how to install the appropriate one to your python distribution.</p>

<p><a href="#pg_connection">Establishing a Connection</a> indicates the module to import and shows how to configure the necessary connection properties in a connection string. Other available connection properties can be used to configure other aspects of the connector capabilities.


<h2>Python Version Support</h2>
</p>

<p>The CData Python Connector for MySQL can be installed and used in various Python 3.7, 3.8, 3.9, and 3.10 distributions (Mac is restricted to Python 3.8, 3.9 and 3.10).


<h2>MySQL Version Support</h2>
</p>

<p>The provider enables connectivity to MySQL Server through 5.0 to 8.0.


<h2>See Also</h2>

<ul><li><a href="#pg_usagepy">Using the Connector</a>: Establish connections and query MySQL through Python code.</li><li><a href="#pg_usageORMintropy">From SQLAlchemy</a>: Use SQLAlchemy to establish a connection with dialect URL, and interact with MySQL data using mapped classes and Sessions.</li></ul></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Package Installation" desc="CData Python Connector for MySQL - RSBMysql -  Package Installation: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Package Installation</h1>
       

    <div class="chapter_content" id="pg_pyinstallation">

<p>
<h2>Dependencies</h2>
</p>

<p>The only dependencies required by the python connectors are an existing python distribution, whether version 3.7, 3.8, 3.9, or 3.10. Other version 3 distributions may need to create a virtual environment to accommodate the version dependency.


<h2>Installation</h2>
</p>

<p>The CData Python Connector for MySQL setup ZIP contains versions of the connector for each compatible operating system (Windows, Mac, and Linux).</p>

<p>Python versions 3.7, 3.8, 3.9, and 3.10 are supported, though only 3.8, 3.9, and 3.10 are supported on Mac environments.

</p>

<p>For Windows environments, the whl file of the appropriate python version and bitness should be used with the "pip install" command. For example, once your command prompt is in the pertinent directory, the following command would be appropriate for a 64-bit Python 3.7 distribution on a Windows environment, once the version number is adjusted accordingly:
<br/><pre lang="">pip install cdata_mysql_connector-22.0.xxxx-cp37-cp37-win_amd64.whl</pre>
</p>

<p>For Linux or Mac environments, the package will be a tar.gz file instead. Once again, the "pip install" command will be used via the terminal.  For example, the following command is appropriate to install the connector for a python 3.7 distribution in a Linux environment, once the version number is adjusted accordingly:
<br/><pre lang="">pip install cdata-mysql-connector-22.0.xxxx-python3.tar.gz</pre>
</p>

<p>Regardless of the environment, certain distributions may require that the "pip3 install" command be used instead, to differentiate from a Python 2 distribution that may exist already. After installation, you can confirm whether the connector is successfully installed by running the "pip list" command. If "cdata-mysql-connector" is present in the list output by the command, then the installation was successful.


<h2>Licensing</h2>
</p>

<p>After the installation is complete, a separate step is needed to activate a license for the connector. Among the CData assets in the distribution's site packages, there should be an install-license tool that will activate this license. From within the distribution's site-packages folder, after navigating to the "cdata/installlic_mysql" folder, simply use a command like the below to activate the license. Omitting the <var>&lt;key&gt;</var> argument will activate a trial license:
<ul><li>Windows:
<br/><pre lang="">./install-license.exe &lt;key&gt;</pre></li><li>Linux / Mac:
<br/><pre lang="">./install-license.sh &lt;key&gt;</pre></li></ul>


<h2>Uninstallation</h2>
</p>

<p>Should the connector need to be uninstalled for any reason, you can do so by running the pip uninstall command, as in the example below:
<br/><pre lang="">pip uninstall cdata-mysql-connector</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Establishing a Connection" desc="CData Python Connector for MySQL - RSBMysql -  Establishing a Connection: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Establishing a Connection</h1>
       

    <div class="chapter_content" id="pg_connectionpy">

<p>The objects available within our connector are accessible from the "cdata.mysql" module. In order to use the module's objects directly, the module must first be imported as below:
<br/><pre lang="">import cdata.mysql as mod</pre>
</p>

<p>From there, the connect() method can be called from the connector object to establish a connection using an appropriate connection string, such as the below:
<br/><pre lang="">mod.connect("User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")</pre>
</p>

<p>
<h2>Connecting to MySQL</h2>

</p>

<p>The following connection properties are required in order to connect to data. 

<ul><li><u>Server</u>: The host name or IP of the server hosting the MySQL database.</li><li><u>Port</u>: The port of the server hosting the MySQL database.</li></ul></p>

<p>You can also optionally set the following:
<ul><li><u>Database</u>: The default database to connect to when connecting to the MySQL Server. If this is not set, tables from all databases will be returned.</li></ul>


<h3>SSL</h3>
</p>

<p>You can leverage SSL authentication to connect to MySQL data via a secure session. Configure the following connection properties to connect to data: 
<ul><li><u>SSLClientCert</u>: Set this to the name of the certificate store for the client certificate. Used in the case of 2-way SSL, where truststore and keystore are kept on both the client and server machines. </li><li><u>SSLClientCertPassword</u>: If a client certificate store is password-protected, set this value to the store's password.</li><li><u>SSLClientCertSubject</u>: The subject of the TLS/SSL client certificate. Used to locate the certificate in the store.</li><li><u>SSLClientCertType</u>:; The certificate type of the client store.</li><li><u>SSLServerCert</u>: The certificate to be accepted from the server.</li></ul>


<h3>SSH</h3>
</p>

<p>Using SSH, you can securely login to a remote machine. To access MySQL data via SSH, configure the following connection properties:
<ul><li><u>SSHClientCert</u>: Set this to the name of the certificate store for the client certificate.</li><li><u>SSHClientCertPassword</u>: If a client certificate store is password-protected, set this value to the store's password.</li><li><u>SSHClientCertSubject</u>: The subject of the TLS/SSL client certificate. Used to locate the certificate in the store.</li><li><u>SSHClientCertType</u>: The certificate type of the client store.</li><li><u>SSHPassword</u>: The password that you use to authenticate with the SSH server.</li><li><u>SSHPort</u>: The port used for SSH operations.</li><li><u>SSHServer</u>: The SSH authentication server you are trying to authenticate against.</li><li><u>SSHServerFingerPrint</u>: The SSH Server fingerprint used for verification of the host you are connecting to.</li><li><u>SSHUser</u>: Set this to the username that you use to authenticate with the SSH server.</li></ul>


<h2>Authenticating to MySQL</h2>



<h2>Standard Authentication</h2>
</p>

<p>To authenticate using standard authentication, set the following:
<ul><li><u>User</u>: The user which will be used to authenticate with the MySQL server.</li><li><u>Password</u>: The password which will be used to authenticate with the MySQL server.</li></ul>


<h2>Connect to MySQL hosted on Azure</h2>
</p>

<p>A MySQL database hosted on Azure may be connected to using a number of OAuth schemes including <b>AzureAD</b>,<b>AzurePassword</b>,<b>AzureMSI</b>. In each case, <u>AzureTenant</u> is required.
<ul><li><u>AzureTenant</u>: The Microsoft Online tenant where MySQL is located.</li></ul>

<h3>Azure AD</h3>
</p>

<p>Azure AD is a connection type that leverages OAuth to authenticate. Set your <u>AuthScheme</u> to <b>AzureAD</b>.

<h3>Azure Password</h3>
</p>

<p>To connect using your Azure credentials directly, specify the following connection properties:
<ul><li><u>AuthScheme</u>: Set this to <b>AzurePassword</b>.</li><li><u>User</u>: Set this to your user account you use to connect to Azure.</li><li><u>Password</u>: Set this to the password you use to connect to Azure.</li><li><u>AzureTenant</u>: Set this to the <b>Directory (tenant) ID</b>, found on the Overview page of the OAuth app used to authenticate to MySQL on Azure.</li></ul></p>

<p>
<h3>MSI</h3>
</p>

<p>If you are running MySQL on an Azure VM, you can leverage Managed Service Identity (MSI) credentials to connect:
<ul><li><u>AuthScheme</u>: Set this to <b>AzureMSI</b>.</li></ul></p>

<p>The MSI credentials are automatically obtained for authentication.


<h4>User Managed Identities</h4>

You can use the <u>OAuthClientId</u> property to specify the "client_id" of the managed identity you would like the token for. You must specify <u>OAuthClientId</u> if your VM has multiple user-assigned managed identities.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Changelog" desc="CData Python Connector for MySQL - RSBMysql -  Changelog: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Changelog</h1>
       

    <div class="chapter_content" id="pg_changelog">

<p>
<h2>General Changes</h2>
</p>

<p></p>

<p><p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Date</b></td><td><b>Build<br>Number</b></td><td><b>Change<br>Type</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap">05/24/2023</td><td>8544</td><td>MySQL</td><td><b>Replacements</b><br><ul><li>Change the behavior of the property Timeout, if it is set to 0, operations will not time out. Before this fix, the default of 30 seconds will be used instead.</li></ul>
</td></tr><tr><td style="white-space:nowrap">05/19/2023</td><td>8539</td><td>Python</td><td><b>Added</b><br><ul><li>Added support for Python 3.11 on Windows, Linux and Mac.</li></ul>
</td></tr><tr><td style="white-space:nowrap">05/16/2023</td><td>8536</td><td>Python</td><td><b>Removed</b><br><ul><li>Removed support for Python 3.7 on Windows and Linux</li></ul>


</td></tr><tr><td style="white-space:nowrap">05/09/2023</td><td>8529</td><td>MySQL</td><td><b>Added</b><br><ul><li>Add a connection property "NetWriteTimeout" to specify the number of seconds to wait for a block to be written to a connection before aborting the write.</li></ul>
</td></tr><tr><td style="white-space:nowrap">04/25/2023</td><td>8515</td><td>General</td><td><b>Removed</b><br><ul><li>Removed support for the SELECT INTO CSV statement. The core code doesn't support it anymore.</li></ul>




</td></tr><tr><td style="white-space:nowrap">11/30/2022</td><td>8369</td><td>MySQL</td><td><b>Added</b><br><ul><li>Support AWS RDS authentication based on EC2 IAM role(AwsEC2Roles).</li></ul>
</td></tr><tr><td style="white-space:nowrap">11/15/2022</td><td>8354</td><td>Python</td><td><b>Changed</b><br><ul><li>Updated embedded JRE to jre8u345-b01(Linux x64 / MacOS x64) and jre-17.0.5+8(MacOS aarch64).</li></ul>
</td></tr><tr><td style="white-space:nowrap">11/15/2022</td><td>8354</td><td>MySQL</td><td><b>Added</b><br><ul><li>Support AWS RDS authentication based on IAM role.</li></ul>






</td></tr><tr><td style="white-space:nowrap">08/17/2022</td><td>8264</td><td>General</td><td><b>Changed</b><br><ul><li>We now support handling the keyword "COLLATE" as standard function name as well.</li></ul>




</td></tr><tr><td style="white-space:nowrap">05/18/2022</td><td>8173</td><td>Python</td><td><b>Added</b><br><ul><li>Added support for Python 3.10 on Windows, Linux, and Mac</li><li>Added support for Python 3.9 on Mac</li><li>Added support for Mac M1</li></ul><br><b>Removed</b><br><ul><li>Removed support for Python 3.6 on Windows and Linux</li></ul>



















</td></tr><tr><td style="white-space:nowrap">09/02/2021</td><td>7915</td><td>General</td><td><b>Added</b><br><ul><li>Added support for the STRING_SPLIT table-valued function in the CROSS APPLY clause.</li></ul>




</td></tr><tr><td style="white-space:nowrap">07/23/2021</td><td>7874</td><td>General</td><td><b>Changed</b><br><ul><li>Updated the Literal Function Names for relative date/datetime functions. Previously, relative date/datetime functions resolved to a different value when used in the projection as opposed to the predicate. For example: SELECT LAST_MONTH() AS lm, Col FROM Table WHERE Col &gt; LAST_MONTH(). Formerly, the two LAST_MONTH() methods would resolve to different datetimes. Now, they will match.</li><li>As a replacement for the previous behavior, the relative date/datetime functions in the criteria may have an 'L' appended to them. For example: WHERE col &gt; L_LAST_MONTH(). This will continue to resolve to the same values that were previously calculated in the criteria. Note that the "L_" prefix will only work in the predicate - it not available for the projection.</li></ul>


</td></tr><tr><td style="white-space:nowrap">07/08/2021</td><td>7859</td><td>General</td><td><b>Added</b><br><ul><li>Added the TCP Logging Module for the logging information happening on the TCP wire protocol. The transport bytes that are incoming and ongoing will be logged at verbosity=5.</li></ul>











</td></tr><tr><td style="white-space:nowrap">04/23/2021</td><td>7785</td><td>General</td><td><b>Added</b><br><ul><li>Added support for handling client side formulas during insert / update. For example: UPDATE Table SET Col1 = CONCAT(Col1, " - ", Col2) WHERE Col2 LIKE 'A%'</li></ul>
</td></tr><tr><td style="white-space:nowrap">04/23/2021</td><td>7783</td><td>General</td><td><b>Changed</b><br><ul><li>Updated how display sizes are determined for varchar primary key and foreign key columns so they will match the reported length of the column.</li></ul>


</td></tr><tr><td style="white-space:nowrap">04/16/2021</td><td>7776</td><td>General</td><td><b>Added</b><br><ul><li>Non-conditional updates between two columns is now available to all drivers. For example: UPDATE Table SET Col1=Col2</li></ul><br><b>Changed</b><br><ul><li>Reduced the length to 255 for varchar primary key and foreign key columns.</li></ul><br><b>Changed</b><br><ul><li>Updated implicit and metadata caching to improve performance and support for multiple connections. Old metadata caches are not compatible - you need to generate new metadata caches if you are currently using CacheMetadata.</li></ul><br><b>Changed</b><br><ul><li>Updated index naming convention to avoid duplicates.</li></ul>







</td></tr></table></center><p /></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Using the Connector" desc="CData Python Connector for MySQL - RSBMysql - Using the Connector: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Using the Connector</h1>
       

    <div class="chapter_content" id="pg_usagepy">

<p>This section provides a walk-through for writing MySQL data access code in Python script.</p>

<p>See <a href="#pg_datamodel">Data Model</a> for more information on the available data source entities and how to query them with SQL. 


<h2>Connecting from Code</h2>
</p>

<p>See <a href="#pg_pyinstallation">Package Installation</a> and <a href="#pg_connectionpy">Establishing a Connection</a> for the prerequisite information you need to deploy the connector and configure the connection to MySQL.</p>

<p>To connect with the mysql.connector module and its related classes, see <a href="#pg_usagescriptconnectpy">Connecting</a>.


<h2>Executing SQL</h2>
</p>

<p>The connection's cursor object is used to directly execute SQL queries. See <a href="#pg_usagescriptquerypy">Querying Data</a> to execute SELECT statements and process the returned result sets. See <a href="#pg_usagescriptupdatepy">Modifying Data</a> to modify the data in MySQL with INSERT, UPDATE, and DELETE statements.


<h2>Executing Stored Procedures</h2>
</p>

<p>You can call stored procedures by using the EXECUTE statement. See <a href="#pg_usagescriptprocpy">Calling Stored Procedures</a> for more information.


<h2>Batch Processing</h2>
</p>

<p>See <a href="#pg_usagescriptbatchpy">Batch Processing</a> to modify several rows of MySQL data at once using parameterized INSERT, UPDATE, and DELETE statements.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Connecting" desc="CData Python Connector for MySQL - RSBMysql -  Connecting: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting</h1>
       

    <div class="chapter_content" id="pg_usagescriptconnectpy">

<p>
<h2>Connecting with the cdata.mysql Module:</h2>
</p>

<p>The connector's module is used directly to establish a connection with the data source. It is able to take a connection string as its argument, as in the below example:
<br/><pre lang="">import cdata.mysql as mod
conn = mod.connect("User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")</pre>
</p>

<p>Once the connection is created, you can execute subsequent SQL queries using it.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Querying Data" desc="CData Python Connector for MySQL - RSBMysql -  Querying Data: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Querying Data</h1>
       

    <div class="chapter_content" id="pg_usagescriptquerypy">

<p>After connecting with the steps in <a href="#pg_usagescriptconnectpy">Connecting</a>, you can execute a SQL statements using the open connection. 

<h2>Executing Queries</h2>
</p>

<p>To execute SQL statements that return data, use the execute method. Once a query is executed, the result set is fetched from the cursor. This result set can then be iterated over to process the records individually:
<br/><pre lang="">cur = conn.execute("SELECT ShipName, ShipCity FROM `sakila`.Orders")
rs = cur.fetchall()
for row in rs:
	print(row)</pre>


<h2>Parameterized Queries</h2>
</p>

<p>Various python collections, such as arrays and tuples are provided as additional arguments for the execute method. This allows you to parameterize the queries executed and help to prevent SQL Injection:
<br/><pre lang="">cmd = "SELECT ShipName, ShipCity FROM `sakila`.Orders WHERE ShipCountry = ?"
params = ["USA"]
cur = conn.execute(cmd, params)
rs = cur.fetchall()
for row in rs:
	print(row)</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Modifying Data" desc="CData Python Connector for MySQL - RSBMysql -  Modifying Data: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Modifying Data</h1>
       

    <div class="chapter_content" id="pg_usagescriptupdatepy">

<p>The connection is also used to issue INSERT, UPDATE, and DELETE commands to the data source. If desired, parameters can be used with these statements. The provider does not support transactions. Any SQL statements executed by this connector will affect the data source immediately. The commit() method on the connection object should not be used.


<h2>Insert</h2>
</p>

<p>The following example adds a new record to the table:
<br/><pre lang="">cmd = "INSERT INTO `sakila`.Orders (ShipName, ShipCity) VALUES (?, ?)"
params = ["Raleigh", "New York"]
cur = conn.execute(cmd, params)
print("Records affected: ", cur.rowcount)</pre>


<h2>Update</h2>
</p>

<p>The following example modifies an existing record in the table:
<br/><pre lang="">cmd = "UPDATE `sakila`.Orders SET ShipCity = ? WHERE Id = ?"
params = ["New York", "10261"]
cur = conn.execute(cmd, params)
print("Records affected: ", cur.rowcount)</pre>


<h2>Delete</h2>
</p>

<p>The following example removes an existing record from the table:
<br/><pre lang="">cmd = "DELETE FROM `sakila`.Orders WHERE Id = ?"
params = ["10261"]
cur = conn.execute(cmd, params)
print("Records affected: ", cur.rowcount)</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Calling Stored Procedures" desc="CData Python Connector for MySQL - RSBMysql -  Calling Stored Procedures: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Calling Stored Procedures</h1>
       

    <div class="chapter_content" id="pg_usagescriptprocpy">

<p>You can execute stored procedures using either the execute() or callproc() method of the connection.

<h2>Call Stored Procedures Using the Execute Method</h2>
</p>

<p>Stored procedures can be called by issuing EXECUTE commands. The stored procedures parameters are parameterized, as in the following example:
<br/><pre lang="">cmd = "EXECUTE SelectEntries ObjectName = ?"
params = ["Account"]
conn.execute(cmd, params)</pre></p>

<p>
<h2>Call Stored Procedures Using the Callproc Method</h2>

</p>

<p>Rather than using "execute()", one can also use the callproc() method to execute the procedure. The method takes a procedure name and a list of parameters as its arguments:
<br/><pre lang="">cur = conn.cursor()
params = ["Account"]
cur.callproc("SelectEntries", params)</pre> 
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Batch Processing" desc="CData Python Connector for MySQL - RSBMysql -  Batch Processing: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Batch Processing</h1>
       

    <div class="chapter_content" id="pg_usagescriptbatchpy">

<p>This python connector is also able to perform batch processing to write to the data source. This can be done by using the executemany() method of the cursor object. In addition to a SQL statement string, a data frame of values should be provided as a series of parameters to execute the SQL statement with. as with normal write operations, the statements are executed immediately by the provider. Do not call the connection's commit() method following the execution.


<h2>Insert</h2>
</p>

<p>The following example adds new records to the table:
<br/><pre lang="">cur = conn.cursor()
cmd = "INSERT INTO `sakila`.Orders (ShipName, ShipCity) VALUES (?, ?)"
params = [["Raleigh", "New York"], ["Raleigh", "New York"]]
cur.executemany(cmd, params)
print("Records affected: ", cur.rowcount)</pre>


<h2>Update</h2>
</p>

<p>The following example modifies existing records in the table:
<br/><pre lang="">cur = conn.cursor()
cmd = "UPDATE `sakila`.Orders SET ShipCity = ? WHERE Id = ?"
params = [["New York", "10261"], ["New York", "10261"]]
cur.executemany(cmd, params)
print("Records affected: ", cur.rowcount)</pre>


<h2>Delete</h2>
</p>

<p>The following example removes existing records from the table:
<br/><pre lang="">cur = conn.cursor()
cmd = "DELETE FROM `sakila`.Orders WHERE Id = ?"
params = [["10261"], ["10261"]]
cur.executemany(cmd, params)
print("Records affected: ", cur.rowcount)</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Using from Tools" desc="CData Python Connector for MySQL - RSBMysql - Using from Tools: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Using from Tools</h1>
       

    <div class="chapter_content" id="pg_usagetoolsintropy">

<p>The connector is integrated with other tools and packages within Python.


<h2>Python Integration Guides</h2>
</p>

<p>The following sections show how to create and use connections with the connector in common packages in python:
<ul><li><a href="#pg_usageORMintropy">From SQLAlchemy</a></li><li><a href="#pg_usagetoolspandaspy">From Pandas</a></li><li><a href="#pg_usagetoolsmatplotlibpy">From Matplotlib</a></li><li><a href="#pg_usagetoolspetlpy">From Petl</a></li></ul>

<h2>Complete List of MySQL Integration Quickstarts</h2>
</p>

<p>See <a href="https://www.cdata.com/kb/tech/mysql-article-list.rst">MySQL integration guides</a> for information on connecting from other applications.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  From SQLAlchemy" desc="CData Python Connector for MySQL - RSBMysql -  From SQLAlchemy: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> From SQLAlchemy</h1>
       

    <div class="chapter_content" id="pg_usageORMintropy">

<p>The CData Python Connector for MySQL includes a Dialect class that enables integration with SQLAlchemy. Bear in mind, several aspects of connector functionality are not currently supported in SQLAlchemy 2.0 or above. If necessary, downgrade SQLAlchemy to version 1.4 or 1.3 before using this connector. The following sections detail various aspects of this integration:


<h2>Connecting from SQLAlchemy</h2>
</p>

<p> See <a href="#pg_usageORMconnectpy">Connecting</a> to construct a URL with which SQLAlchemy loads and uses the appropriate connector automatically.


<h2>Reflecting metadata with SQLAlchemy</h2>
</p>

<p> <a href="#pg_usageORMreflectpy">Reflecting Metadata</a> shows how to model MySQL tables with mapped classes.


<h2>Querying Data from SQLAlchemy</h2>
</p>

<p> <a href="#pg_usageORMquerypy">Querying Data</a> demonstrates how to use mapped classes to query the associated tables.


<h2>Modifying Data from SQLAlchemy</h2>
</p>

<p>The provider provides INSERT/UPDATE/DELETE functionality in SQLAlchemy. <a href="#pg_usageORMupdatepy">Modifying Data</a> shows how to affect the data in the data source by calling the session's "execute()" method.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Connecting" desc="CData Python Connector for MySQL - RSBMysql -  Connecting: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting</h1>
       

    <div class="chapter_content" id="pg_usageORMconnectpy">

<p>
<h2>Connecting with a Dialect URL</h2>
</p>

<p>A specific URL format is used to establish a connection using SQLAlchemy. For this connector, either of the following URL formats are acceptable when creating the engine: 

<h3>Format 1</h3>

<br/><pre lang="">from sqlalchemy import create_engine
engine = create_engine("cdata_mysql:///?User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")</pre>


<h3>Format 2</h3>

<br/><pre lang="">from sqlalchemy import create_engine
engine = create_engine("cdata_mysql://MyUser:MyPassword@MyServer:MyPort/MyDatabase")</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Reflecting Metadata" desc="CData Python Connector for MySQL - RSBMysql -  Reflecting Metadata: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Reflecting Metadata</h1>
       

    <div class="chapter_content" id="pg_usageORMreflectpy">

<p>SQLAlchemy can act as an ORM, which allows you to treat records of a database table as instantiable records. To leverage this functionality, you will need to reflect the underlying metadata in one of the following ways. The examples below conform to use with SQLAlchemy 1.4.

<h2>Model Data Using a Mapping Class</h2>
</p>

<p>Declare a mapping class for the table you wish to model in the ORM. This is done using "sqlalchemy.ext.declarative.declarative_base". A known table in the data model is modeled either partially or completely as in the below example:
<br/><pre lang="">from sqlalchemy.ext.declarative import declarative_base
Base = declarative_base()
class `sakila`.Orders(Base):
	__tablename__ = "`sakila`.Orders"
	Id = Column(String, primary_key=True)
	ShipName = Column(String)
	ShipCity = Column(String)</pre>

<h2>Automatically Reflect Metadata</h2>
</p>

<p>Rather than mapping tables manually, SQLAlchemy can discover the metadata for one or more tables automatically. This can be accomplished across the entire data model with automap_base:
<br/><pre lang="">from sqlalchemy import MetaData
from sqlalchemy.ext.automap import automap_base
meta = MetaData()
abase = automap_base(metadata=meta)
abase.prepare(autoload_with=engine)
`sakila`.Orders = abase.classes.`sakila`.Orders</pre></p>

<p>Alternatevely, a single table can be reflected with an inspector. When reflecting this way, providing a list of specific columns to map is optional:
<br/><pre lang="">from sqlalchemy import MetaData, Table
from sqlalchemy import inspect
meta = MetaData()
insp = inspect(engine)
`sakila`.Orders_table = Table("`sakila`.Orders", meta)
insp.reflect_table(`sakila`.Orders_table, ["Id","ShipCity"])</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Querying Data" desc="CData Python Connector for MySQL - RSBMysql -  Querying Data: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Querying Data</h1>
       

    <div class="chapter_content" id="pg_usageORMquerypy">

<p>After connecting with the steps in <a href="#pg_usageORMconnectpy">Connecting</a>, and reflecting some of the metadata with one of the methods in <a href="#pg_usageORMreflectpy">Reflecting Metadata</a>, you can query data using a session object.

<h2>Querying Data Using the Query Method</h2>
</p>

<p>If the mapping class has been prepared, it is used alongside a session object to query the data source. After binding the engine to the session, simply provide the mapping class to the session's query method, as below:
<br/><pre lang="">engine = create_engine("cdata_mysql:///?User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")
factory = sessionmaker(bind=engine)
session = factory()
for instance in session.query(`sakila`.Orders).filter_by(ShipCountry="USA"):
	print("Id: ", instance.Id)
	print("ShipName: ", instance.ShipName)
	print("ShipCity: ", instance.ShipCity)
	print("---------")</pre>

<h2>Querying Data Using the Execute Method</h2>
</p>

<p>As an alternative, the session object can also run the query with the execute() method alongside the appropriate Table object. Assuming you have an active session, the below is just as viable:
<br/><pre lang="">`sakila`.Orders_table = `sakila`.Orders.metadata.tables["`sakila`.Orders"]
for instance in session.execute(`sakila`.Orders_table.select().where(`sakila`.Orders_table.c.ShipCountry == "USA")):
	print("Id: ", instance.Id)
	print("FullName: ", instance.Name)
	print("City: ", instance.BillingCity)
	print("---------")</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Executing JOINs" desc="CData Python Connector for MySQL - RSBMysql -  Executing JOINs: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Executing JOINs</h1>
       

    <div class="chapter_content" id="pg_usageORMjoinspy">

<p>
<h2>Implicit Joining</h2>
</p>

<p>Mapped classes of related MySQL objects are joined implicitly if there is a singular foreign key relationship. After importing the necessary objects, a relationship is established between your two mapped classes, as in the example below:
<br/><pre lang="">from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, String, Integer, DateTime, ForeignKey
from sqlalchemy.orm import sessionmaker, relationship

Base = declarative_base()
class Contact(Base):
	__tablename__ = "Contact"
	Id = Column(Integer, primary_key=True)
	Name = Column(String)
	Email = Column(String)
	BirthDate = Column(DateTime)
	AccountId = Column(String, ForeignKey("Account.Id"))
	Account_Link = relationship("Account", back_populates="Contact_Link")

class Account(Base):
	__tablename__ = "Account"
	Id = Column(String, primary_key=True)
	Name = Column(String)
	BillingCity = Column(String)
	NumberOfEmployees = Column(Integer)
	Contact_Link = relationship("Contact", order_by=Contact.Id, back_populates="Account_Link")</pre>
</p>

<p>Once the relationship is established, the tables are queried simultaneously using the session's "query()" method, as below:
<br/><pre lang="">rs = session.query(Account, Contact).filter(Account.Id == Contact.AccountId)
for Ac, Ct in rs:
  print("AccountId: ", Ac.Id)
  print("AccountName: ", Ac.Name)
  print("ContactId: ", Ct.Id)
  print("ContactName: ", Ct.Name)</pre>


<h2>Other Join Forms</h2>
</p>

<p>There may come situations where mapped classes have either no foreign keys or multiple foreign keys. In such situations, different forms of the JOIN query may be needed to accommodate them. Using the earlier classes as examples, the following JOIN queries are possible as well:
<ul><li>Explicit condition (necessary if there are no foreign keys in your mapped classes):
<br/><pre lang="">rs = session.query(Account, Contact).join(Contact, Account.Id == Contact.AccountId)
for Ac, Ct in rs:</pre></li><li>Left-to-Right Relationship:
<br/><pre lang="">rs = session.query(Account, Contact).join(Account.Contact_Link)
for Ac, Ct in rs:</pre></li><li>Left-to-Right Relationship with explicit target:
<br/><pre lang="">rs = session.query(Account, Contact).join(Contact, Account.Contact_Link)
for Ac, Ct in rs:</pre></li><li>String form of a Left-to-Right Relationship:
<br/><pre lang="">rs = session.query(Account, Contact).join("Contact_Link")
for Ac, Ct in rs:</pre></li></ul>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Other SQL Clauses" desc="CData Python Connector for MySQL - RSBMysql -  Other SQL Clauses: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Other SQL Clauses</h1>
       

    <div class="chapter_content" id="pg_usageORMotherpy">

<p>SQLAlchemy ORM also exposes support for other clauses in SQL, such as ORDER BY, GROUP BY, LIMIT, and OFFSET. All of these are supported by this connector:


<h2>ORDER BY</h2>
</p>

<p>The below example sorts by a specified column using the session object's query() method.
<br/><pre lang="">rs = session.query(`sakila`.Orders).order_by(`sakila`.Orders.Freight)
for instance in rs:
	print("Id: ", instance.Id)
	print("ShipName: ", instance.ShipName)
	print("ShipCity: ", instance.ShipCity)
	print("---------")</pre>
</p>

<p>Alternatively, you can perform an ORDER BY using the session object's execute() method.
<br/><pre lang="">rs = session.execute(`sakila`.Orders_table.select().order_by(`sakila`.Orders_table.c.Freight))
for instance in rs:</pre>


<h2>GROUP BY</h2>
</p>

<p>The below example groups records with a specified column using the session object's query() method.
<br/><pre lang="">rs = session.query(func.count(`sakila`.Orders.Id).label("CustomCount"), `sakila`.Orders.ShipName).group_by(`sakila`.Orders.ShipName)
for instance in rs:
	print("Count: ", instance.CustomCount)
	print("ShipName: ", instance.ShipName)
	print("---------")</pre>
</p>

<p>Alternatively, you can perform a GROUP BY using the session object's execute() method.
<br/><pre lang="">rs = session.execute(`sakila`.Orders_table.select().with_only_columns([func.count(`sakila`.Orders_table.c.Id).label("CustomCount"), `sakila`.Orders_table.c.ShipName]).group_by(`sakila`.Orders_table.c.ShipName))
for instance in rs:</pre>


<h2>LIMIT and OFFSET</h2>
</p>

<p>The below example skips the first 100 records and fetches the following 25 using the session object's query() method.
<br/><pre lang="">rs = session.query(`sakila`.Orders).limit(25).offset(100)
for instance in rs:
	print("Id: ", instance.Id)
	print("ShipName: ", instance.ShipName)
	print("ShipCity: ", instance.ShipCity)
	print("---------")</pre>
</p>

<p>Alternatively, you can set a LIMIT or OFFSET using the session object's execute() method.
<br/><pre lang="">rs = session.execute(`sakila`.Orders_table.select().limit(25).offset(100))
for instance in rs:</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Aggregate Functions" desc="CData Python Connector for MySQL - RSBMysql -  Aggregate Functions: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Aggregate Functions</h1>
       

    <div class="chapter_content" id="pg_usageORMaggpy">

<p>Certain aggregate functions can also be used within SQLAlchemy by using the func module. First, you will need to import it:
<br/><pre lang="">from sqlalchemy.sql import func</pre></p>

<p>Once imported, the following aggregate functions are available:


<h2>COUNT</h2>
</p>

<p>This example counts the number of records in a set of groups using the session object's query() method.
<br/><pre lang="">rs = session.query(func.count(`sakila`.Orders.Id).label("CustomCount"), `sakila`.Orders.ShipName).group_by(`sakila`.Orders.ShipName)
for instance in rs:
	print("Count: ", instance.CustomCount)
	print("ShipName: ", instance.ShipName)
	print("---------")</pre>
</p>

<p>Alternatively, you can execute COUNT using the session object's execute() method.
<br/><pre lang="">rs = session.execute(`sakila`.Orders_table.select().with_only_columns([func.count(`sakila`.Orders_table.c.Id).label("CustomCount"), `sakila`.Orders_table.c.ShipName])group_by(`sakila`.Orders_table.c.ShipName))
for instance in rs:</pre>


<h2>SUM</h2>
</p>

<p>This example calculates the cumulative amount of a numeric column in a set of groups.
<br/><pre lang="">rs = session.query(func.sum(`sakila`.Orders.Freight).label("CustomSum"), `sakila`.Orders.ShipName).group_by(`sakila`.Orders.ShipName)
for instance in rs:
	print("Sum: ", instance.CustomSum)
	print("ShipName: ", instance.ShipName)
	print("---------")</pre>
</p>

<p>Alternatively, you can invoke SUM using the session object's execute() method.
<br/><pre lang="">rs = session.execute(`sakila`.Orders_table.select().with_only_columns([func.sum(`sakila`.Orders_table.c.Freight).label("CustomSum"), `sakila`.Orders_table.c.ShipName]).group_by(`sakila`.Orders_table.c.ShipName))
for instance in rs:</pre>


<h2>AVG</h2>
</p>

<p>This example calculates the average amount of a numeric column in a set of groups using the session object's query() method.
<br/><pre lang="">rs = session.query(func.avg(`sakila`.Orders.Freight).label("CustomAvg"), `sakila`.Orders.ShipName).group_by(`sakila`.Orders.ShipName)
for instance in rs:
	print("Avg: ", instance.CustomAvg)
	print("ShipName: ", instance.ShipName)
	print("---------")</pre>
</p>

<p>Alternatively, you can invoke AVG using the session object's execute() method.
<br/><pre lang="">rs = session.execute(`sakila`.Orders_table.select().with_only_columns([func.avg(`sakila`.Orders_table.c.Freight).label("CustomAvg"), `sakila`.Orders_table.c.ShipName]).group_by(`sakila`.Orders_table.c.ShipName))
for instance in rs:</pre>


<h2>MAX and MIN</h2>
</p>

<p>This example finds the maximum value and minimum value of a numeric column in a set of groups.
<br/><pre lang="">rs = session.query(func.max(`sakila`.Orders.Freight).label("CustomMax"), func.min(`sakila`.Orders.Freight).label("CustomMin"), `sakila`.Orders.ShipName).group_by(`sakila`.Orders.ShipName)
for instance in rs:
	print("Max: ", instance.CustomMax)
	print("Min: ", instance.CustomMin)
	print("ShipName: ", instance.ShipName)
	print("---------")</pre>
</p>

<p>Alternatively, you can invoke MAX and MIN using the session object's execute() method.
<br/><pre lang="">rs = session.execute(`sakila`.Orders_table.select().with_only_columns([func.max(`sakila`.Orders_table.c.Freight).label("CustomMax"), func.min(`sakila`.Orders_table.c.Freight).label("CustomMin"), `sakila`.Orders_table.c.ShipName]).group_by(`sakila`.Orders_table.c.ShipName))
for instance in rs:</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Modifying Data" desc="CData Python Connector for MySQL - RSBMysql -  Modifying Data: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Modifying Data</h1>
       

    <div class="chapter_content" id="pg_usageORMupdatepy">

<p>Commands can be executed individually by the session with a call to "execute()".

<h2>Obtaining the Table Object</h2>
</p>

<p> The query supplied to this method is constructed using the associated Table object of a mapped class. This Table object is obtained from the mapped class's metadata field, as below:
<br/><pre lang="">`sakila`.Orders_table = `sakila`.Orders.metadata.tables["`sakila`.Orders"]</pre>
</p>

<p>Once the table object is obtained, the write operations are executed in the following ways. The queries are executed immediately without the need for a call to "commit()":


<h2>Insert</h2>
</p>

<p>The following example adds a new record to the table:
<br/><pre lang="">session.execute(`sakila`.Orders_table.insert(), {"ShipName": "Raleigh", "ShipCity": "New York"})</pre>


<h2>Update</h2>
</p>

<p>The following example modifies an existing record in the table:
<br/><pre lang="">session.execute(`sakila`.Orders_table.update().where(`sakila`.Orders_table.c.Id == "10261").values(ShipName="Raleigh", ShipCity="New York"))</pre>


<h2>Delete</h2>
</p>

<p>The following example removes an existing record from the table:
<br/><pre lang="">session.execute(`sakila`.Orders_table.delete().where(`sakila`.Orders_table.c.Id == "10261"))</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  From Pandas" desc="CData Python Connector for MySQL - RSBMysql -  From Pandas: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> From Pandas</h1>
       

    <div class="chapter_content" id="pg_usagetoolspandaspy">

<p>When combined with the connector, Pandas can be used to generate data frames which  contains your MySQL data. Once created, a data frame can be passed to various other python packages.


<h2>Connecting</h2>
</p>

<p>Pandas will need to be imported before it can be used. Pandas will also rely on a SQLAlchemy engine when executing queries, as below:
<br/><pre lang="">import pandas as pd
from sqlalchemy import create_engine
engine = create_engine("cdata_mysql:///?User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")</pre>


<h2>Querying Data</h2>
</p>

<p>SELECT queries are provided in a call to the "read_sql()" method in pandas, alongside a relevant connection object. Pandas will execute the query on that connection, and return the results in the form of a data frame, which are used for a variety of purposes.
<br/><pre lang="">df = pd.read_sql("""
	SELECT
	   ShipName,
	   ShipCity,
     $exNumericCol;
	FROM `sakila`.Orders;""", engine)
print(df)</pre>


<h2>Modifying Data</h2>
</p>

<p>To insert new records to a table, simply create a new data frame, and define its fields accordingly. From there, simply call "to_sql()" on the data frame to perform the INSERT operation with the connector, as in the below example. The "if _exists" argument <b>must</b> be set to "append" to prevent Pandas from attempting building the table from scratch, set index=False if needed to prevent Pandas from writing data frame index as a column:
<br/><pre lang="">df = pd.DataFrame({"ShipName": ["Raleigh"], "ShipCity": ["New York"]})
df.to_sql("`sakila`.Orders", con=engine, if_exists="append", index=False)</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  From Matplotlib" desc="CData Python Connector for MySQL - RSBMysql -  From Matplotlib: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> From Matplotlib</h1>
       

    <div class="chapter_content" id="pg_usagetoolsmatplotlibpy">

<p>Matplotlib contains a number of tools that can graphically model MySQL data after being fed a data frame <a href="#pg_usagetoolspandaspy">From Pandas</a>.


<h2>Using PyPlot</h2>
</p>

<p>Before any Matplotlib tool, such as pyplot, can be used, it must be imported:
<br/><pre lang="">from matplotlib import pyplot as plt</pre>
</p>

<p>Once a pandas data frame is obtained, it can be used to create a plot visualizing MySQL data. For example, the following plot would generate and display a bar graph relating ShipName and Freight values:
<br/><pre lang="">df.plot(kind="bar", x="ShipName", y=["Freight"])
plt.show()</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  From Petl" desc="CData Python Connector for MySQL - RSBMysql -  From Petl: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> From Petl</h1>
       

    <div class="chapter_content" id="pg_usagetoolspetlpy">

<p>The provider can be used to create ETL applications and pipelines for CSV data in Python using Petl.

<h2>Install Required Modules</h2>
</p>

<p>Install the Petl modules using the <var>pip</var> utility.
<br/><pre lang="">pip install petl</pre>

<h2>Connecting</h2>
</p>

<p>Import the modules, including the CData Python Connector for MySQL. You can then use the provider's <var>connect</var> function to create a connection using a valid MySQL connection string. A SQLAlchemy engine may also be used instead of a direct connection.
<br/><pre lang="">import petl as etl
import cdata.mysql as mod
cnxn = mod.connect("User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")</pre>

<h2>Extract, Transform, and Load the MySQL Data</h2>
</p>

<p>Create a SQL query string and store the query results in a DataFrame.
<br/><pre lang="">sql = "SELECT	ShipName, ShipCity FROM `sakila`.Orders "
table1 = etl.fromdb(cnxn,sql)</pre>

<h3>Loading Data</h3>
</p>

<p>With the query results stored in a DataFrame, you can load your data into any supported Petl destination. The following example loads the data into a CSV file.
<br/><pre lang="">etl.tocsv(table1,'output.csv')</pre>

<h3>Modifying Data</h3>
</p>

<p>Insert new rows into MySQL tables using Petl's <var>appenddb</var> function.
<br/><pre lang="">table1 = [['ShipName','ShipCity'],['Raleigh','New York']]
etl.appenddb(table1,cnxn,'`sakila`.Orders')</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Schema Discovery" desc="CData Python Connector for MySQL - RSBMysql - Schema Discovery: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Schema Discovery</h1>
       

    <div class="chapter_content" id="pg_systemtablesintropy">

<p>The extension supports schema discovery by using SQL queries to available <a href="#pg_allsystables">System Tables</a>.


<h2>Using SQL</h2>
</p>

<p>The following sections describe the discovery of metadata through several <a href="#pg_allsystables">System Tables</a>:
<ul><li><a href="#pg_systemtablespy">Tables and Views</a></li><li><a href="#pg_systemcolumnspy">Columns</a></li><li><a href="#pg_systemprocspy">Procedures</a></li></ul>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Tables and Views" desc="CData Python Connector for MySQL - RSBMysql -  Tables and Views: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Tables and Views</h1>
       

    <div class="chapter_content" id="pg_systemtablespy">

<p>The connector possesses system tables that are used to discover the tables and views available in the data model. Of these system tables, "sys_tables" and "sys_views" are used to fetch information about the available tables and views respectively:


<h2>Tables</h2>

<br/><pre lang="">import cdata.mysql as mod
conn = mod.connect("User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")
cur = conn.cursor()
cmd = "SELECT * FROM sys_tables"
cur.execute(cmd)
rs = cur.fetchall()
for row in rs:
	print(row)</pre>


<h2>Views</h2>

<br/><pre lang="">import cdata.mysql as mod
conn = mod.connect("User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")
cur = conn.cursor()
cmd = "SELECT * FROM sys_views"
cur.execute(cmd, params)
rs = cur.fetchall()
for row in rs:
	print(row)</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Columns" desc="CData Python Connector for MySQL - RSBMysql -  Columns: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Columns</h1>
       

    <div class="chapter_content" id="pg_systemcolumnspy">

<p>The available columns for any given table are fetched from a system table called "sys_tablecolumns". A specific table name is provided in the WHERE criteria to restrict the table from which the column information is fetched:
<br/><pre lang="">import cdata.mysql as mod
conn = mod.connect("User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")
cur = conn.cursor()
cmd = "SELECT * FROM sys_tablecolumns WHERE TableName = '`sakila`.Orders'"
cur.execute(cmd)
rs = cur.fetchall()
for row in rs:
	print(row)</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Procedures" desc="CData Python Connector for MySQL - RSBMysql -  Procedures: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Procedures</h1>
       

    <div class="chapter_content" id="pg_systemprocspy">

<p>
<h2>Procedures</h2>
</p>

<p>A system table called "sys_procedures" is queried to obtain the available stored procedures that are executed:
<br/><pre lang="">import cdata.mysql as mod
conn = mod.connect("User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")
cur = conn.cursor()
cmd = "SELECT * FROM sys_procedures"
cur.execute(cmd)
rs = cur.fetchall()
for row in rs:
	print(row)</pre>


<h2>Parameters</h2>
</p>

<p>The input parameters of any stored procedure are similarly obtained from the "sys_procedureparameters" system table:
<br/><pre lang="">import cdata.mysql as mod
conn = mod.connect("User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;")
cur = conn.cursor()
cmd = "SELECT * FROM sys_procedureparameters WHERE ProcedureName = 'SelectEntries'"
cur.execute(cmd)
rs = cur.fetchall()
for row in rs:
	print(row)</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Advanced Features" desc="CData Python Connector for MySQL - RSBMysql - Advanced Features: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Advanced Features</h1>
       

    <div class="chapter_content" id="pg_advancedfeatures">

<p>This section details a selection of advanced features of the MySQL provider.




<h2>SSL Configuration</h2>
</p>

<p>Use <a href="#pg_advancedssl">SSL Configuration</a> to adjust how provider handles TLS/SSL certificate negotiations. You can choose from various certificate formats; 
see the <u>SSLServerCert</u> property under "Connection String Options" for more information.</p>

<p>
<h2>Firewall and Proxy</h2>
</p>

<p>Configure the provider for compliance with <a href="#pg_advancedproxy">Firewall and Proxy</a>, including Windows proxies. You can also set up tunnel connections.</p>

<p>



<h2>Logging</h2>
</p>

<p>See <a href="#pg_advancedlogging">Logging</a> for an overview of configuration settings that can be used to refine CData logging. For basic logging, you only need to set two 
connection properties, but there are numerous features that support more refined logging, where you can select subsets of information to be logged using the <u>LogModules</u> connection
 property. </p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  SSL Configuration" desc="CData Python Connector for MySQL - RSBMysql -  SSL Configuration: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> SSL Configuration</h1>
       

    <div class="chapter_content" id="pg_advancedssl">

<p>
<h2>Customizing the SSL Configuration</h2>

</p>

<p>By default, the provider attempts to negotiate SSL/TLS by checking the server's certificate against the system's trusted certificate store.</p>

<p>To specify another certificate, see the <u>SSLServerCert</u> property for the available formats to do so. </p>

<p>
<h2>Client SSL Certificates</h2>
</p>

<p>The MySQL provider also supports setting client certificates. Set the following to connect using a client certificate.
<ul><li><u>SSLClientCert</u>: The name of the certificate store for the client certificate.</li><li><u>SSLClientCertType</u>: The type of key store containing the TLS/SSL client certificate.</li><li><u>SSLClientCertPassword</u>: The password for the TLS/SSL client certificate.</li><li><u>SSLClientCertSubject</u>: The subject of the TLS/SSL client certificate.</li></ul></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Firewall and Proxy" desc="CData Python Connector for MySQL - RSBMysql -  Firewall and Proxy: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Firewall and Proxy</h1>
       

    <div class="chapter_content" id="pg_advancedproxy">

<p>
<h2>Connecting Through a Firewall or Proxy</h2>

</p>

<p>Set the following properties: 

<ul><li>To use a proxy-based firewall, set <u>FirewallType</u>, <u>FirewallServer</u>, and <u>FirewallPort</u>.</li><li>To tunnel the connection, set <u>FirewallType</u> to TUNNEL.</li><li>To authenticate, specify <u>FirewallUser</u> and <u>FirewallPassword</u>. </li><li>To authenticate to a SOCKS proxy, additionally set <u>FirewallType</u> to SOCKS5.</li></ul></p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL -  Logging" desc="CData Python Connector for MySQL - RSBMysql -  Logging: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Logging</h1>
       

    <div class="chapter_content" id="pg_advancedlogging">

<p>Capturing provider logging can be very helpful when diagnosing error messages or other unexpected behavior.

<h2>Basic Logging</h2>
</p>

<p>You will simply need to set two connection properties to begin capturing provider logging.
<ul><li><u>Logfile</u>: A filepath which designates the name and location of the log file. </li><li><u>Verbosity</u>: This is a numerical value (1-5) that determines the amount of detail in the log. See the page in the Connection Properties section for an explanation of the five levels.</li><li><u>MaxLogFileSize</u>: When the limit is hit, a new log is created in the same folder with the date and time appended to the end. The default limit is 100 MB. Values lower than 100 kB will use 100 kB as the value instead.</li><li><u>MaxLogFileCount</u>: A string specifying the maximum file count of log files. When the limit is hit, a new log is created in the same folder with the date and time appended to the end and the oldest log file will be deleted. Minimum supported value is 2. A value of 0 or a negative value indicates no limit on the count.</li></ul></p>

<p>Once this property is set, the provider will populate the log file as it carries out various tasks, such as when authentication is performed or queries are executed. If the specified file doesn't already exist, it will be created.</p>

<p>
<h2>Log Verbosity</h2>
</p>

<p>The verbosity level determines the amount of detail that the provider reports to the <u>Logfile</u>. <u>Verbosity</u> levels from 1 to 5 are supported. These are described in the following list:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">1</td><td>Setting <u>Verbosity</u> to 1 will log the query, the number of rows returned by it, the start of execution and the time taken, and any errors.</td></tr><tr><td style="white-space:nowrap">2</td><td>Setting <u>Verbosity</u> to 2 will log everything included in <u>Verbosity</u> 1 and additional information about the request.</td></tr><tr><td style="white-space:nowrap">3</td><td>Setting <u>Verbosity</u> to 3 will additionally log  the body of the request and the response.</td></tr><tr><td style="white-space:nowrap">4</td><td>Setting <u>Verbosity</u> to 4 will additionally log transport-level communication with the data source. This includes SSL negotiation.</td></tr><tr><td style="white-space:nowrap">5</td><td>Setting <u>Verbosity</u> to 5 will additionally log communication with the data source and additional details that may be helpful in troubleshooting problems. This includes interface commands.</td></tr></table></center><p />
</p>

<p>The <u>Verbosity</u> should not be set to greater than 1 for normal operation. Substantial amounts of data can be logged at higher verbosities, which can delay execution times.</p>

<p>To refine the logged content further by showing/hiding specific categories of information, see <u>LogModules</u>.


<h2>Sensitive Data</h2>


Verbosity levels 3 and higher may capture information that you do not want shared outside of your organization. The following lists information of concern for each level:</p>

<p><ul><li>Verbosity 3: The full body of the request and the response, which includes all the data returned by the provider</li><li>Verbosity 4: SSL certificates</li><li>Verbosity 5: Any extra transfer data not included at Verbosity 3, such as non human-readable binary transfer data</li></ul>
</p>

<p><b>Best Practices for Data Security</b></p>

<p>Although we mask sensitive values, such as passwords, in the connection string and any request in the log, it is always best practice to review the logs for any sensitive information before sharing outside your organization.</p>

<p></p>

<p>
<h2>Advanced Logging</h2>
</p>

<p>You may want to refine the exact information that is recorded to the log file. This can be accomplished using the <u>LogModules</u> property.</p>

<p>This property allows you to filter the logging using a semicolon-separated list of logging modules.</p>

<p>All modules are four characters long. <b>Please note that modules containing three letters have a required trailing blank space</b>. The available modules are:
<ul><li><b>EXEC</b>: Query Execution. Includes execution messages for original SQL queries, parsed SQL queries, and normalized SQL queries. Query and page success/failure messages appear here as well.</li><li><b>INFO</b>: General Information. Includes the connection string, driver version (build number), and initial connection messages.</li><li><b>HTTP</b>: HTTP Protocol messages. Includes HTTP requests/responses (including POST messages), as well as Kerberos related messages.</li><li><b>SSL </b>: SSL certificate messages.</li><li><b>OAUT</b>: OAuth related failure/success messages.</li><li><b>SQL </b>: Includes SQL transactions, SQL bulk transfer messages, and SQL result set messages.</li><li><b>META</b>: Metadata cache and schema messages.</li><li><b>TCP </b>: Incoming and Ongoing raw bytes on TCP transport layer messages.</li></ul>
An example value for this property would be.
<br/><pre lang="">LogModules=INFO;EXEC;SSL ;SQL ;META;</pre></p>

<p>Note that these modules refine the information as it is pulled after taking the <u>Verbosity</u> into account.</p>

    </div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Connection String Options" desc="CData Python Connector for MySQL - RSBMysql - Connection String Options: The connection string properties describe the various options that can be used to establish a connection.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Connection String Options</h1>
       


<div class="chapter_content" id="Connection">
<p>The connection string properties are the various options that can be used to establish a connection. This section provides a complete list of the options you can configure in the connection string for this provider. Click the links for further details.</p>












For more information on establishing a connection, see <a href="#pg_connectionpy">Establishing a Connection</a>.



<p>
<a href="#RSBMysql_c_Authentication"><h2>Authentication</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AuthScheme">AuthScheme</a></td><td>The scheme used for authentication. Accepted entries are Password, AzureAD, AzurePassword, AzureMSI, AwsIAMRoles, AwsEC2Roles.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Server">Server</a></td><td>The host name or IP address of the server. Supports cluster servers, for example '192.168.0.1,192.168.0.2'.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Port">Port</a></td><td>The port of the MySQL server. Supports cluster servers, for example: '3306, 3307', the number of the port should match with Servers.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_User">User</a></td><td>The MySQL user account used to authenticate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Password">Password</a></td><td>The password used to authenticate the user.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Database">Database</a></td><td>The name of the MySQL database.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Domain">Domain</a></td><td>The name of the domain for a Windows (NTLM) security login.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_NTLMVersion">NTLMVersion</a></td><td>The NTLM version.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_IntegratedUser">IntegratedUser</a></td><td>The user that is authenticating to the Windows.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_UseSSL">UseSSL</a></td><td>This field sets whether SSL is enabled.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_AWSAuthentication"><h2>AWS Authentication</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AWSAccessKey">AWSAccessKey</a></td><td>Your AWS account access key. This value is accessible from your AWS security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_AWSSecretKey">AWSSecretKey</a></td><td>Your AWS account secret key. This value is accessible from your AWS security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_AWSRoleARN">AWSRoleARN</a></td><td>The Amazon Resource Name of the role to use when authenticating.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_AzureAuthentication"><h2>Azure Authentication</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AzureTenant">AzureTenant</a></td><td>The Microsoft Online tenant being used to access data. If not specified, your default tenant is used.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_OAuth"><h2>OAuth</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_InitiateOAuth">InitiateOAuth</a></td><td>Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_OAuthClientId">OAuthClientId</a></td><td>The client Id assigned when you register your application with an OAuth authorization server.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_OAuthClientSecret">OAuthClientSecret</a></td><td>The client secret assigned when you register your application with an OAuth authorization server.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_OAuthSettingsLocation">OAuthSettingsLocation</a></td><td>The location of the settings file where OAuth values are saved when InitiateOAuth is set to GETANDREFRESH or REFRESH. Alternatively, you can hold this location in memory by specifying a value starting with memory://.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_OAuthVerifier">OAuthVerifier</a></td><td>The verifier code returned from the OAuth authorization URL.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_SSL"><h2>SSL</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_SSLClientCert">SSLClientCert</a></td><td>The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSLClientCertType">SSLClientCertType</a></td><td>The type of key store containing the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSLClientCertPassword">SSLClientCertPassword</a></td><td>The password for the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSLClientCertSubject">SSLClientCertSubject</a></td><td>The subject of the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSLServerCert">SSLServerCert</a></td><td>The certificate to be accepted from the server when connecting using TLS/SSL.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_SSH"><h2>SSH</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_SSHAuthMode">SSHAuthMode</a></td><td>The authentication method to be used to log on to an SFTP server.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHClientCert">SSHClientCert</a></td><td>A certificate to be used for authenticating the SSHUser.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHClientCertPassword">SSHClientCertPassword</a></td><td>The password of the SSHClientCert key if it has one.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHClientCertSubject">SSHClientCertSubject</a></td><td>The subject of the SSH client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHClientCertType">SSHClientCertType</a></td><td>The type of SSHClientCert private key.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHServer">SSHServer</a></td><td>The SSH server.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHPort">SSHPort</a></td><td>The SSH port.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHUser">SSHUser</a></td><td>The SSH user.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHPassword">SSHPassword</a></td><td>The SSH password.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHServerFingerprint">SSHServerFingerprint</a></td><td>The SSH server fingerprint.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_UseSSH">UseSSH</a></td><td>Whether to tunnel the MySQL connection over SSH. Use SSH.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_Firewall"><h2>Firewall</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_FirewallType">FirewallType</a></td><td>The protocol used by a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_FirewallServer">FirewallServer</a></td><td>The name or IP address of a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_FirewallPort">FirewallPort</a></td><td>The TCP port for a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_FirewallUser">FirewallUser</a></td><td>The user name to use to authenticate with a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_FirewallPassword">FirewallPassword</a></td><td>A password used to authenticate to a proxy-based firewall.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_Proxy"><h2>Proxy</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_ProxyAutoDetect">ProxyAutoDetect</a></td><td>This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyServer">ProxyServer</a></td><td>The hostname or IP address of a proxy to route HTTP traffic through.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyPort">ProxyPort</a></td><td>The TCP port the ProxyServer proxy is running on.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyAuthScheme">ProxyAuthScheme</a></td><td>The authentication type to use to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyUser">ProxyUser</a></td><td>A user name to be used to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyPassword">ProxyPassword</a></td><td>A password to be used to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxySSLType">ProxySSLType</a></td><td>The SSL type to use when connecting to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyExceptions">ProxyExceptions</a></td><td>A semicolon separated list of destination hostnames or IPs that are exempt from connecting through the ProxyServer .</td></tr>
</table></center><p>
<a href="#RSBMysql_c_Logging"><h2>Logging</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_Logfile">Logfile</a></td><td>A filepath which designates the name and location of the log file.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Verbosity">Verbosity</a></td><td>The verbosity level that determines the amount of detail included in the log file.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_LogModules">LogModules</a></td><td>Core modules to be included in the log file.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_MaxLogFileSize">MaxLogFileSize</a></td><td>A string specifying the maximum size in bytes for a log file (for example, 10 MB).</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_MaxLogFileCount">MaxLogFileCount</a></td><td>A string specifying the maximum file count of log files.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_Schema"><h2>Schema</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_Location">Location</a></td><td>A path to the directory that contains the schema files defining tables, views, and stored procedures.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_BrowsableSchemas">BrowsableSchemas</a></td><td>This property restricts the schemas reported to a subset of the available schemas. For example, BrowsableSchemas=SchemaA,SchemaB,SchemaC.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Tables">Tables</a></td><td>This property restricts the tables reported to a subset of the available tables. For example, Tables=TableA,TableB,TableC.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Views">Views</a></td><td>Restricts the views reported to a subset of the available tables. For example, Views=ViewA,ViewB,ViewC.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_Caching"><h2>Caching</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AutoCache">AutoCache</a></td><td>Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheProvider">CacheProvider</a></td><td>The name of the provider to be used to cache data.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheDriver">CacheDriver</a></td><td>The database driver used to cache data.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheConnection">CacheConnection</a></td><td>The connection string for the cache database. This property is always used in conjunction with CacheProvider . Setting both properties will override the value set for CacheLocation for caching data.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheLocation">CacheLocation</a></td><td>Specifies the path to the cache when caching to a file.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheTolerance">CacheTolerance</a></td><td>The tolerance for stale data in the cache specified in seconds when using AutoCache .</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Offline">Offline</a></td><td>Use offline mode to get the data from the cache instead of the live source.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheMetadata">CacheMetadata</a></td><td>This property determines whether or not to cache the table metadata to a file store.</td></tr>
</table></center><p>
<a href="#RSBMysql_c_Miscellaneous"><h2>Miscellaneous</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AllowUserVariables">AllowUserVariables</a></td><td>When set to True, user variables (prefixed by an @) can be used in SQL queries.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Characterset">Characterset</a></td><td>The default client character set used by the provider. For example, 'utf8'.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_MaxRows">MaxRows</a></td><td>Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Other">Other</a></td><td>These hidden properties are used only in specific use cases.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_QueryPassthrough">QueryPassthrough</a></td><td>This option passes the query to the MySQL server as is.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Readonly">Readonly</a></td><td>You can use this property to enforce read-only access to MySQL from the provider.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_RTK">RTK</a></td><td>The runtime key used for licensing.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ServerTimeZone">ServerTimeZone</a></td><td>Specify a specific server time zone id of current platform(.Net or Java) by user.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Timeout">Timeout</a></td><td>The value in seconds until the connection timeout error is thrown.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ZeroDatesToNull">ZeroDatesToNull</a></td><td>Whether or not to return Date and DateTime values consisting of all zeros as NULL.</td></tr>
</table></center></div>




  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Authentication" desc="CData Python Connector for MySQL - RSBMysql - Authentication: The scheme used for authentication. Accepted entries are Password, AzureAD, AzurePassword, AzureMSI, AwsIAMRoles, AwsEC2Roles.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Authentication</h1>
       
<div class="chapter_content" id="RSBMysql_c_Authentication">
<p>
<p>This section provides a complete list of the Authentication properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AuthScheme">AuthScheme</a></td><td>The scheme used for authentication. Accepted entries are Password, AzureAD, AzurePassword, AzureMSI, AwsIAMRoles, AwsEC2Roles.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Server">Server</a></td><td>The host name or IP address of the server. Supports cluster servers, for example '192.168.0.1,192.168.0.2'.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Port">Port</a></td><td>The port of the MySQL server. Supports cluster servers, for example: '3306, 3307', the number of the port should match with Servers.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_User">User</a></td><td>The MySQL user account used to authenticate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Password">Password</a></td><td>The password used to authenticate the user.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Database">Database</a></td><td>The name of the MySQL database.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Domain">Domain</a></td><td>The name of the domain for a Windows (NTLM) security login.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_NTLMVersion">NTLMVersion</a></td><td>The NTLM version.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_IntegratedUser">IntegratedUser</a></td><td>The user that is authenticating to the Windows.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_UseSSL">UseSSL</a></td><td>This field sets whether SSL is enabled.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - AuthScheme" desc="CData Python Connector for MySQL - RSBMysql - AuthScheme: The scheme used for authentication. Accepted entries are Password, AzureAD, AzurePassword, AzureMSI, AwsIAMRoles, AwsEC2Roles.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AuthScheme</h1>
       
<div class="chapter_content" id="RSBMysql_p_AuthScheme">
<p>The scheme used for authentication. Accepted entries are Password, AzureAD, AzurePassword, AzureMSI, AwsIAMRoles, AwsEC2Roles.</p>





<h3>Possible Values</h3>
AzureMSI, Password, AwsIAMRoles, NTLM, AwsEC2Roles, AzureAD, AzurePassword

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"Password"</p>

<h3>Remarks</h3>


<p>The scheme used for authentication. Accepted entries are Password, AzureAD, AzurePassword, AzureMSI, AwsIAMRoles, AwsEC2Roles.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Server" desc="CData Python Connector for MySQL - RSBMysql - Server: The host name or IP address of the server. Supports cluster servers, for example '192.168.0.1,192.168.0.2'.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Server</h1>
       
<div class="chapter_content" id="RSBMysql_p_Server">
<p>The host name or IP address of the server. Supports cluster servers, for example '192.168.0.1,192.168.0.2'.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The host name or IP of the server hosting the MySQL database.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Port" desc="CData Python Connector for MySQL - RSBMysql - Port: The port of the MySQL server. Supports cluster servers, for example: '3306, 3307', the number of the port should match with Servers.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Port</h1>
       
<div class="chapter_content" id="RSBMysql_p_Port">
<p>The port of the MySQL server. Supports cluster servers, for example: '3306, 3307', the number of the port should match with Servers.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"3306"</p>

<h3>Remarks</h3>


<p>The port of the server hosting the MySQL database.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - User" desc="CData Python Connector for MySQL - RSBMysql - User: The MySQL user account used to authenticate.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>User</h1>
       
<div class="chapter_content" id="RSBMysql_p_User">
<p>The MySQL user account used to authenticate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Together with <a href="#RSBMysql_p_Password">Password</a>, this field is used to authenticate against the MySQL server.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Password" desc="CData Python Connector for MySQL - RSBMysql - Password: The password used to authenticate the user.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Password</h1>
       
<div class="chapter_content" id="RSBMysql_p_Password">
<p>The password used to authenticate the user.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <a href="#RSBMysql_p_User">User</a> and <u>Password</u> are together used to authenticate with the server.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Database" desc="CData Python Connector for MySQL - RSBMysql - Database: The name of the MySQL database.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Database</h1>
       
<div class="chapter_content" id="RSBMysql_p_Database">
<p>The name of the MySQL database.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The default database to connect to when connecting to the MySQL <a href="#RSBMysql_p_Server">Server</a>. If this is not set, tables from all databases will be returned.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Domain" desc="CData Python Connector for MySQL - RSBMysql - Domain: The name of the domain for a Windows (NTLM) security login.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Domain</h1>
       
<div class="chapter_content" id="RSBMysql_p_Domain">
<p>The name of the domain for a Windows (NTLM) security login.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The name of the domain for a Windows (NTLM) security login. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - NTLMVersion" desc="CData Python Connector for MySQL - RSBMysql - NTLMVersion: The NTLM version.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>NTLMVersion</h1>
       
<div class="chapter_content" id="RSBMysql_p_NTLMVersion">
<p>The NTLM version.</p>





<h3>Possible Values</h3>
1, 2

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"1"</p>

<h3>Remarks</h3>


<p>This property specifies the NTLM version to use.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - IntegratedUser" desc="CData Python Connector for MySQL - RSBMysql - IntegratedUser: The user that is authenticating to the Windows.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>IntegratedUser</h1>
       
<div class="chapter_content" id="RSBMysql_p_IntegratedUser">
<p>The user that is authenticating to the Windows.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The user that is authenticating to the Windows.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - UseSSL" desc="CData Python Connector for MySQL - RSBMysql - UseSSL: This field sets whether SSL is enabled.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>UseSSL</h1>
       
<div class="chapter_content" id="RSBMysql_p_UseSSL">
<p>This field sets whether SSL is enabled.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>This field sets whether the provider will attempt to negotiate TLS/SSL connections to the server. By default, the provider checks the server's certificate against the system's trusted certificate store. To specify another certificate, set <a href="#RSBMysql_p_SSLServerCert">SSLServerCert</a>.</p>

<p></p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - AWS Authentication" desc="CData Python Connector for MySQL - RSBMysql - AWS Authentication: Your AWS account access key. This value is accessible from your AWS security credentials page.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWS Authentication</h1>
       
<div class="chapter_content" id="RSBMysql_c_AWSAuthentication">
<p>
<p>This section provides a complete list of the AWS Authentication properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AWSAccessKey">AWSAccessKey</a></td><td>Your AWS account access key. This value is accessible from your AWS security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_AWSSecretKey">AWSSecretKey</a></td><td>Your AWS account secret key. This value is accessible from your AWS security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_AWSRoleARN">AWSRoleARN</a></td><td>The Amazon Resource Name of the role to use when authenticating.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - AWSAccessKey" desc="CData Python Connector for MySQL - RSBMysql - AWSAccessKey: Your AWS account access key. This value is accessible from your AWS security credentials page.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSAccessKey</h1>
       
<div class="chapter_content" id="RSBMysql_p_AWSAccessKey">
<p>Your AWS account access key. This value is accessible from your AWS security credentials page.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Your AWS account access key. This value is accessible from your AWS security credentials page:
<ol><li>Sign into the AWS Management console with the credentials for your root account.</li><li>Select your account name or number and select My Security Credentials in the menu that is displayed.</li><li>Click Continue to Security Credentials and expand the Access Keys section to manage or create root account access keys. </li></ol></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - AWSSecretKey" desc="CData Python Connector for MySQL - RSBMysql - AWSSecretKey: Your AWS account secret key. This value is accessible from your AWS security credentials page.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSSecretKey</h1>
       
<div class="chapter_content" id="RSBMysql_p_AWSSecretKey">
<p>Your AWS account secret key. This value is accessible from your AWS security credentials page.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Your AWS account secret key. This value is accessible from your AWS security credentials page:
<ol><li>Sign into the AWS Management console with the credentials for your root account.</li><li>Select your account name or number and select My Security Credentials in the menu that is displayed.</li><li>Click Continue to Security Credentials and expand the Access Keys section to manage or create root account access keys. </li></ol></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - AWSRoleARN" desc="CData Python Connector for MySQL - RSBMysql - AWSRoleARN: The Amazon Resource Name of the role to use when authenticating.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSRoleARN</h1>
       
<div class="chapter_content" id="RSBMysql_p_AWSRoleARN">
<p>The Amazon Resource Name of the role to use when authenticating.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>When authenticating outside of AWS, it is common to use a Role for authentication instead of your direct 
AWS account credentials. Entering the <u>AWSRoleARN</u> will cause the CData Python Connector for MySQL to perform a role based 
authentication instead of using the <a href="#RSBMysql_p_AWSAccessKey">AWSAccessKey</a> and <a href="#RSBMysql_p_AWSSecretKey">AWSSecretKey</a> directly. The <a href="#RSBMysql_p_AWSAccessKey">AWSAccessKey</a> and <a href="#RSBMysql_p_AWSSecretKey">AWSSecretKey</a> 
must still be specified to perform this authentication. You cannot use the credentials of an AWS root user when setting 
RoleARN. The <a href="#RSBMysql_p_AWSAccessKey">AWSAccessKey</a> and <a href="#RSBMysql_p_AWSSecretKey">AWSSecretKey</a> must be those of an IAM user.

</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Azure Authentication" desc="CData Python Connector for MySQL - RSBMysql - Azure Authentication: The Microsoft Online tenant being used to access data. If not specified, your default tenant is used.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Azure Authentication</h1>
       
<div class="chapter_content" id="RSBMysql_c_AzureAuthentication">
<p>
<p>This section provides a complete list of the Azure Authentication properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AzureTenant">AzureTenant</a></td><td>The Microsoft Online tenant being used to access data. If not specified, your default tenant is used.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - AzureTenant" desc="CData Python Connector for MySQL - RSBMysql - AzureTenant: The Microsoft Online tenant being used to access data. If not specified, your default tenant is used.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AzureTenant</h1>
       
<div class="chapter_content" id="RSBMysql_p_AzureTenant">
<p>The Microsoft Online tenant being used to access data. If not specified, your default tenant is used.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The Microsoft Online tenant being used to access data. For instance, contoso.onmicrosoft.com. Alternatively, 
specify the tenant Id. This value is the directory Id in the Azure Portal &gt; Azure Active Directory &gt; Properties.</p>

<p>Typically it is not necessary to specify the Tenant. This can be automatically determined by Microsoft when using 
the <a href="#RSBMysql_p_OAuthGrantType">OAuthGrantType</a> set to CODE (default). However, it may fail in the case that the user belongs to multiple 
tenants. For instance, if an Admin of domain A invites a user of domain B to be a guest user. The user will 
now belong to both tenants. It is a good practice to specify the Tenant, although in general things should normally 
work without having to specify it.</p>

<p>The <u>AzureTenant</u> is required when setting <a href="#RSBMysql_p_OAuthGrantType">OAuthGrantType</a> to CLIENT. When using client credentials, there is no 
user context. The credentials are taken from the context of the app itself. While Microsoft still allows client credentials 
to be obtained without specifying which Tenant, it has a much lower probability of picking the specific tenant you 
want to work with. For this reason, we require <u>AzureTenant</u> to be explicitly stated for all client credentials connections 
to ensure you get credentials that are applicable for the domain you intend to connect to.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - OAuth" desc="CData Python Connector for MySQL - RSBMysql - OAuth: Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuth</h1>
       
<div class="chapter_content" id="RSBMysql_c_OAuth">
<p>
<p>This section provides a complete list of the OAuth properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_InitiateOAuth">InitiateOAuth</a></td><td>Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_OAuthClientId">OAuthClientId</a></td><td>The client Id assigned when you register your application with an OAuth authorization server.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_OAuthClientSecret">OAuthClientSecret</a></td><td>The client secret assigned when you register your application with an OAuth authorization server.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_OAuthSettingsLocation">OAuthSettingsLocation</a></td><td>The location of the settings file where OAuth values are saved when InitiateOAuth is set to GETANDREFRESH or REFRESH. Alternatively, you can hold this location in memory by specifying a value starting with memory://.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_OAuthVerifier">OAuthVerifier</a></td><td>The verifier code returned from the OAuth authorization URL.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - InitiateOAuth" desc="CData Python Connector for MySQL - RSBMysql - InitiateOAuth: Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>InitiateOAuth</h1>
       
<div class="chapter_content" id="RSBMysql_p_InitiateOAuth">
<p>Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.</p>





<h3>Possible Values</h3>
OFF, GETANDREFRESH, REFRESH

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"OFF"</p>

<h3>Remarks</h3>


<p>The following options are available:
<ol><li><b>OFF</b>: Indicates that the OAuth flow will be handled entirely by the user. An OAuthAccessToken will be required to authenticate.</li><li><b>GETANDREFRESH</b>: Indicates that the entire OAuth Flow will be handled by the provider. If no token currently exists, it will be obtained by prompting the user via the browser. If a token exists, it will be refreshed when applicable.</li><li><b>REFRESH</b>: Indicates that the provider will only handle refreshing the OAuthAccessToken. The user will never be prompted by the provider to authenticate via the browser. The user must handle obtaining the OAuthAccessToken and OAuthRefreshToken initially.</li></ol>

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - OAuthClientId" desc="CData Python Connector for MySQL - RSBMysql - OAuthClientId: The client Id assigned when you register your application with an OAuth authorization server.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthClientId</h1>
       
<div class="chapter_content" id="RSBMysql_p_OAuthClientId">
<p>The client Id assigned when you register your application with an OAuth authorization server.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>As part of registering an OAuth application, you will receive the <u>OAuthClientId</u> value, sometimes also called a consumer key, and a client secret, the <a href="#RSBMysql_p_OAuthClientSecret">OAuthClientSecret</a>. 

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - OAuthClientSecret" desc="CData Python Connector for MySQL - RSBMysql - OAuthClientSecret: The client secret assigned when you register your application with an OAuth authorization server.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthClientSecret</h1>
       
<div class="chapter_content" id="RSBMysql_p_OAuthClientSecret">
<p>The client secret assigned when you register your application with an OAuth authorization server.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>As part of registering an OAuth application, you will receive the <a href="#RSBMysql_p_OAuthClientId">OAuthClientId</a>, also called a consumer key. You will also receive a client secret, also called a consumer secret. Set the client secret in the <u>OAuthClientSecret</u> property. 
 </p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - OAuthSettingsLocation" desc="CData Python Connector for MySQL - RSBMysql - OAuthSettingsLocation: The location of the settings file where OAuth values are saved when InitiateOAuth is set to GETANDREFRESH or REFRESH. Alternatively, you can hold this location in memory by specifying a value starting with memory://.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthSettingsLocation</h1>
       
<div class="chapter_content" id="RSBMysql_p_OAuthSettingsLocation">
<p>The location of the settings file where OAuth values are saved when InitiateOAuth is set to GETANDREFRESH or REFRESH. Alternatively, you can hold this location in memory by specifying a value starting with memory://.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"%APPDATA%\\CData\\MySQL Data Provider\\OAuthSettings.txt"</p>

<h3>Remarks</h3>


<p>When <a href="#RSBMysql_p_InitiateOAuth">InitiateOAuth</a> is set to GETANDREFRESH or REFRESH, the provider saves OAuth values to avoid requiring the user to manually enter OAuth connection properties and allowing the credentials to be shared across connections or processes.
</p>

<p>Instead of specifying a file path, you can use memory storage. Memory locations are specified by using a value starting with 'memory://' followed by a unique identifier for that set of credentials (ex: memory://user1). The identifier can be anything you choose but should be unique to the user. Unlike file based storage, you must manually store the credentials when closing the connection with memory storage.  This enables you to set them in the connection when the process is started again. You can retrieve OAuth property values with a query to the sys_connection_props system table. If there are multiple connections using the same credentials, the properties is read from the last connection to be closed.
</p>

<p>The default location is "%APPDATA%\\CData\\MySQL Data Provider\\OAuthSettings.txt" with <b>%APPDATA%</b> set to the user's configuration directory:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Platform</b> </td><td><b>%APPDATA%</b></td></tr><tr><td style="white-space:nowrap">Windows </td><td>The value of the APPDATA environment variable</td></tr><tr><td style="white-space:nowrap">Linux </td><td>~/.config</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - OAuthVerifier" desc="CData Python Connector for MySQL - RSBMysql - OAuthVerifier: The verifier code returned from the OAuth authorization URL.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthVerifier</h1>
       
<div class="chapter_content" id="RSBMysql_p_OAuthVerifier">
<p>The verifier code returned from the OAuth authorization URL.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The verifier code returned from the OAuth authorization URL. This can be used on systems where a browser cannot be launched such as headless systems. </p>

<p></p>

<p>
<h3>Authentication on Headless Machines</h3>
</p>

<p>See <a href="#pg_connectionpy">Establishing a Connection</a> to obtain the <u>OAuthVerifier</u> value.</p>

<p>Set
<a href="#RSBMysql_p_OAuthSettingsLocation">OAuthSettingsLocation</a> along with <u>OAuthVerifier</u>. When you connect, the provider exchanges the <u>OAuthVerifier</u> for the OAuth authentication tokens and saves them, encrypted, to the specified location.  Set <a href="#RSBMysql_p_InitiateOAuth">InitiateOAuth</a> to GETANDREFRESH to automate the exchange. 
</p>

<p>Once the OAuth settings file has been generated, you can remove <u>OAuthVerifier</u> from the connection properties and connect with <a href="#RSBMysql_p_OAuthSettingsLocation">OAuthSettingsLocation</a> set. </p>

<p>To automatically refresh the OAuth token values, set <a href="#RSBMysql_p_OAuthSettingsLocation">OAuthSettingsLocation</a> and additionally set <a href="#RSBMysql_p_InitiateOAuth">InitiateOAuth</a> to REFRESH.</p>

<p></p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSL" desc="CData Python Connector for MySQL - RSBMysql - SSL: The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSL</h1>
       
<div class="chapter_content" id="RSBMysql_c_SSL">
<p>
<p>This section provides a complete list of the SSL properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_SSLClientCert">SSLClientCert</a></td><td>The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSLClientCertType">SSLClientCertType</a></td><td>The type of key store containing the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSLClientCertPassword">SSLClientCertPassword</a></td><td>The password for the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSLClientCertSubject">SSLClientCertSubject</a></td><td>The subject of the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSLServerCert">SSLServerCert</a></td><td>The certificate to be accepted from the server when connecting using TLS/SSL.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSLClientCert" desc="CData Python Connector for MySQL - RSBMysql - SSLClientCert: The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLClientCert</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSLClientCert">
<p>The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The name of the certificate store for the client certificate.</p>

<p>The <a href="#RSBMysql_p_SSLClientCertType">SSLClientCertType</a> field specifies the type of the certificate store specified by <u>SSLClientCert</u>. If the store is password protected, specify the password in <a href="#RSBMysql_p_SSLClientCertPassword">SSLClientCertPassword</a>.</p>

<p><u>SSLClientCert</u> is used in conjunction with the <a href="#RSBMysql_p_SSLClientCertSubject">SSLClientCertSubject</a> field in order to specify client certificates. If <u>SSLClientCert</u> has a value, and <a href="#RSBMysql_p_SSLClientCertSubject">SSLClientCertSubject</a> is set, a search for a certificate is initiated. See <a href="#RSBMysql_p_SSLClientCertSubject">SSLClientCertSubject</a> for more information.</p>

<p>Designations of certificate stores are platform-dependent.</p>

<p>The following are designations of the most common User and Machine certificate stores in Windows:</p>

<p>
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">MY</td><td>A certificate store holding personal certificates with their associated private keys.
</td></tr><tr><td style="white-space:nowrap">CA</td><td>Certifying authority certificates.
</td></tr><tr><td style="white-space:nowrap">ROOT</td><td>Root certificates.
</td></tr><tr><td style="white-space:nowrap">SPC</td><td>Software publisher certificates.
</td></tr></table></center><p />
</p>

<p>In Java, the certificate store normally is a file containing certificates and optional private keys.
</p>

<p>When the certificate store type is PFXFile, this property must be set to the name of the file. When the type is PFXBlob, the property must be
set to the binary contents of a PFX file (for example, PKCS12 certificate store).
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSLClientCertType" desc="CData Python Connector for MySQL - RSBMysql - SSLClientCertType: The type of key store containing the TLS/SSL client certificate.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLClientCertType</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSLClientCertType">
<p>The type of key store containing the TLS/SSL client certificate.</p>





<h3>Possible Values</h3>
USER, MACHINE, PFXFILE, PFXBLOB, JKSFILE, JKSBLOB, PEMKEY_FILE, PEMKEY_BLOB, PUBLIC_KEY_FILE, PUBLIC_KEY_BLOB, SSHPUBLIC_KEY_FILE, SSHPUBLIC_KEY_BLOB, P7BFILE, PPKFILE, XMLFILE, XMLBLOB

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"USER"</p>

<h3>Remarks</h3>


<p>This property can take one of the following values:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">USER - default</td><td>For Windows, this specifies that the certificate store is a certificate store owned by the current user. Note that this store type is not available in Java.
</td></tr><tr><td style="white-space:nowrap">MACHINE</td><td>For Windows, this specifies that the certificate store is a machine store. Note that this store type is not available in Java.
</td></tr><tr><td style="white-space:nowrap">PFXFILE</td><td>The certificate store is the name of a PFX (PKCS12) file containing certificates.
</td></tr><tr><td style="white-space:nowrap">PFXBLOB</td><td>The certificate store is a string (base-64-encoded) representing a certificate store in PFX (PKCS12) format.
</td></tr><tr><td style="white-space:nowrap">JKSFILE</td><td>The certificate store is the name of a Java key store (JKS) file containing certificates. Note that this store type is only available in Java.
</td></tr><tr><td style="white-space:nowrap">JKSBLOB</td><td>The certificate store is a string (base-64-encoded) representing a certificate store in JKS format. Note that this store type is only available in Java.
</td></tr><tr><td style="white-space:nowrap">PEMKEY_FILE</td><td>The certificate store is the name of a PEM-encoded file that contains a private key and an optional certificate.
</td></tr><tr><td style="white-space:nowrap">PEMKEY_BLOB</td><td>The certificate store is a string (base64-encoded) that contains a private key and an optional certificate.
</td></tr><tr><td style="white-space:nowrap">PUBLIC_KEY_FILE</td><td>The certificate store is the name of a file that contains a PEM- or DER-encoded public key certificate.
</td></tr><tr><td style="white-space:nowrap">PUBLIC_KEY_BLOB</td><td>The certificate store is a string (base-64-encoded) that contains a PEM- or DER-encoded public key certificate.
</td></tr><tr><td style="white-space:nowrap">SSHPUBLIC_KEY_FILE</td><td>The certificate store is the name of a file that contains an SSH-style public key.
</td></tr><tr><td style="white-space:nowrap">SSHPUBLIC_KEY_BLOB</td><td>The certificate store is a string (base-64-encoded) that contains an SSH-style public key.
</td></tr><tr><td style="white-space:nowrap">P7BFILE</td><td>The certificate store is the name of a PKCS7 file containing certificates.
</td></tr><tr><td style="white-space:nowrap">PPKFILE</td><td>The certificate store is the name of a file that contains a PuTTY Private Key (PPK).
</td></tr><tr><td style="white-space:nowrap">XMLFILE</td><td>The certificate store is the name of a file that contains a certificate in XML format.
</td></tr><tr><td style="white-space:nowrap">XMLBLOB</td><td>The certificate store is a string that contains a certificate in XML format.
</td></tr></table></center><p />


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSLClientCertPassword" desc="CData Python Connector for MySQL - RSBMysql - SSLClientCertPassword: The password for the TLS/SSL client certificate.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLClientCertPassword</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSLClientCertPassword">
<p>The password for the TLS/SSL client certificate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>If the certificate store is of a type that requires a password, this property is used to specify that password to open the certificate store.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSLClientCertSubject" desc="CData Python Connector for MySQL - RSBMysql - SSLClientCertSubject: The subject of the TLS/SSL client certificate.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLClientCertSubject</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSLClientCertSubject">
<p>The subject of the TLS/SSL client certificate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"*"</p>

<h3>Remarks</h3>


<p>When loading a certificate the subject is used to locate the certificate in the store.
</p>

<p>If an exact match is not found, the store is searched for subjects containing the value of the property. If a match is still not found, the property is set to an empty string, and no certificate is selected.
</p>

<p>The special value "*" picks the first certificate in the certificate store.
</p>

<p>The certificate subject is a comma separated list of distinguished name fields and values. For example, "CN=www.server.com, OU=test, C=US, E=support@company.com". The common fields and their meanings are shown below.
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Field</b></td><td><b>Meaning</b></td></tr><tr><td style="white-space:nowrap">CN</td><td>Common Name. This is commonly a host name like www.server.com.</td></tr><tr><td style="white-space:nowrap">O</td><td>Organization</td></tr><tr><td style="white-space:nowrap">OU</td><td>Organizational Unit</td></tr><tr><td style="white-space:nowrap">L</td><td>Locality</td></tr><tr><td style="white-space:nowrap">S</td><td>State</td></tr><tr><td style="white-space:nowrap">C</td><td>Country</td></tr><tr><td style="white-space:nowrap">E</td><td>Email Address</td></tr></table></center><p />
</p>

<p>If a field value contains a comma, it must be quoted.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSLServerCert" desc="CData Python Connector for MySQL - RSBMysql - SSLServerCert: The certificate to be accepted from the server when connecting using TLS/SSL.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLServerCert</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSLServerCert">
<p>The certificate to be accepted from the server when connecting using TLS/SSL.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>If using a TLS/SSL connection, this property can be used to specify the TLS/SSL certificate to be accepted from the server. Any other certificate that is not trusted by the machine is rejected. 
</p>

<p>This property can take the following forms:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Description</b>      </td><td><b>Example</b></td></tr><tr><td style="white-space:nowrap">A full PEM Certificate (example shortened for brevity) </td><td>-----BEGIN CERTIFICATE-----
MIIChTCCAe4CAQAwDQYJKoZIhv......Qw==
-----END CERTIFICATE-----</td></tr><tr><td style="white-space:nowrap">A path to a local file containing the certificate  </td><td>C:\cert.cer</td></tr><tr><td style="white-space:nowrap">The public key (example shortened for brevity)  </td><td>-----BEGIN RSA PUBLIC KEY-----
MIGfMA0GCSq......AQAB
-----END RSA PUBLIC KEY-----</td></tr><tr><td style="white-space:nowrap">The MD5 Thumbprint (hex values can also be either space or colon separated) </td><td>ecadbdda5a1529c58a1e9e09828d70e4</td></tr><tr><td style="white-space:nowrap">The SHA1 Thumbprint (hex values can also be either space or colon separated) </td><td>34a929226ae0819f2ec14b4a3d904f801cbb150d</td></tr></table></center><p />
</p>

<p>If not specified, any certificate trusted by the machine is accepted. 

</p>

<p>Use '*' to signify to accept all certificates. Note that this is not recommended due to security concerns.

</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSH" desc="CData Python Connector for MySQL - RSBMysql - SSH: The authentication method to be used to log on to an SFTP server.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSH</h1>
       
<div class="chapter_content" id="RSBMysql_c_SSH">
<p>
<p>This section provides a complete list of the SSH properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_SSHAuthMode">SSHAuthMode</a></td><td>The authentication method to be used to log on to an SFTP server.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHClientCert">SSHClientCert</a></td><td>A certificate to be used for authenticating the SSHUser.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHClientCertPassword">SSHClientCertPassword</a></td><td>The password of the SSHClientCert key if it has one.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHClientCertSubject">SSHClientCertSubject</a></td><td>The subject of the SSH client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHClientCertType">SSHClientCertType</a></td><td>The type of SSHClientCert private key.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHServer">SSHServer</a></td><td>The SSH server.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHPort">SSHPort</a></td><td>The SSH port.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHUser">SSHUser</a></td><td>The SSH user.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHPassword">SSHPassword</a></td><td>The SSH password.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_SSHServerFingerprint">SSHServerFingerprint</a></td><td>The SSH server fingerprint.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_UseSSH">UseSSH</a></td><td>Whether to tunnel the MySQL connection over SSH. Use SSH.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHAuthMode" desc="CData Python Connector for MySQL - RSBMysql - SSHAuthMode: The authentication method to be used to log on to an SFTP server.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHAuthMode</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHAuthMode">
<p>The authentication method to be used to log on to an SFTP server.</p>





<h3>Possible Values</h3>
None, Password, Public_Key

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"Password"</p>

<h3>Remarks</h3>


<p><ul><li>None: No authentication will be performed. The current <a href="#RSBMysql_p_User">User</a> value is ignored, and the connection will be logged in as anonymous.</li><li>Password: The provider will use the values of <a href="#RSBMysql_p_User">User</a> and <a href="#RSBMysql_p_Password">Password</a> to authenticate the user.</li><li>Public_Key: The provider will use the values of <a href="#RSBMysql_p_User">User</a> and <a href="#RSBMysql_p_SSHClientCert">SSHClientCert</a> to authenticate the user. <a href="#RSBMysql_p_SSHClientCert">SSHClientCert</a> must have a private key available for this authentication method to succeed.</li></ul></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHClientCert" desc="CData Python Connector for MySQL - RSBMysql - SSHClientCert: A certificate to be used for authenticating the SSHUser.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHClientCert</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHClientCert">
<p>A certificate to be used for authenticating the SSHUser.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p><u>SSHClientCert</u> must contain a valid private key in order to use public key authentication.
A public key is optional, if one is not included then the provider generates it from the private key. 
The provider sends the public key to the server and the connection is allowed if the user has authorized the public key.
</p>

<p>The <a href="#RSBMysql_p_SSHClientCertType">SSHClientCertType</a> field specifies the type of the key store specified by <u>SSHClientCert</u>.
If the store is password protected, specify the password in <a href="#RSBMysql_p_SSHClientCertPassword">SSHClientCertPassword</a>.
</p>

<p>Some types of key stores are containers which may include multiple keys.
By default the provider will select the first key in the store, but you can specify a specific key using <a href="#RSBMysql_p_SSHClientCertSubject">SSHClientCertSubject</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHClientCertPassword" desc="CData Python Connector for MySQL - RSBMysql - SSHClientCertPassword: The password of the SSHClientCert key if it has one.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHClientCertPassword</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHClientCertPassword">
<p>The password of the SSHClientCert key if it has one.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property is only used when authenticating to SFTP servers with <a href="#RSBMysql_p_SSHAuthMode">SSHAuthMode</a> set to PublicKey and <a href="#RSBMysql_p_SSHClientCert">SSHClientCert</a> set to a private key. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHClientCertSubject" desc="CData Python Connector for MySQL - RSBMysql - SSHClientCertSubject: The subject of the SSH client certificate.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHClientCertSubject</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHClientCertSubject">
<p>The subject of the SSH client certificate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"*"</p>

<h3>Remarks</h3>


<p>When loading a certificate the subject is used to locate the certificate in the store.</p>

<p>If an exact match is not found, the store is searched for subjects containing the value of the property.</p>

<p>If a match is still not found, the property is set to an empty string, and no certificate is selected.</p>

<p>The special value "*" picks the first certificate in the certificate store.</p>

<p>The certificate subject is a comma separated list of distinguished name fields and values. 
For instance "CN=www.server.com, OU=test, C=US, E=support@cdata.com". Common fields and their 
meanings are displayed below.
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Field</b></td><td><b>Meaning</b></td></tr><tr><td style="white-space:nowrap">CN</td><td>Common Name. This is commonly a host name like www.server.com.</td></tr><tr><td style="white-space:nowrap">O</td><td>Organization</td></tr><tr><td style="white-space:nowrap">OU</td><td>Organizational Unit</td></tr><tr><td style="white-space:nowrap">L</td><td>Locality</td></tr><tr><td style="white-space:nowrap">S</td><td>State</td></tr><tr><td style="white-space:nowrap">C</td><td>Country</td></tr><tr><td style="white-space:nowrap">E</td><td>Email Address</td></tr></table></center><p /></p>

<p>If a field value contains a comma it must be quoted.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHClientCertType" desc="CData Python Connector for MySQL - RSBMysql - SSHClientCertType: The type of SSHClientCert private key.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHClientCertType</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHClientCertType">
<p>The type of SSHClientCert private key.</p>





<h3>Possible Values</h3>
USER, MACHINE, PFXFILE, PFXBLOB, JKSFILE, JKSBLOB, PEMKEY_FILE, PEMKEY_BLOB, PPKFILE, PPKBLOB, XMLFILE, XMLBLOB

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"PEMKEY_FILE"</p>

<h3>Remarks</h3>


<p>This property can take one of the following values:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Types</b></td><td><b>Description</b></td><td><b>Allowed Blob Values</b></td></tr><tr><td style="white-space:nowrap">MACHINE/USER</td><td>	</td><td>Blob values are not supported.
</td></tr><tr><td style="white-space:nowrap">JKSFILE/JKSBLOB</td><td>    </td><td>base64-only
</td></tr><tr><td style="white-space:nowrap">PFXFILE/PFXBLOB</td><td>A PKCS12-format (.pfx) file. Must contain both a certificate and a private key.</td><td>base64-only
</td></tr><tr><td style="white-space:nowrap">PEMKEY_FILE/PEMKEY_BLOB</td><td>A PEM-format file. Must contain an RSA, DSA, or OPENSSH private key. Can optionally contain a certificate matching the private key.</td><td>base64 or plain text.  Newlines may be replaced with spaces when providing the blob as text.
</td></tr><tr><td style="white-space:nowrap">PPKFILE/PPKBLOB</td><td>A PuTTY-format private key created using the <var>puttygen</var> tool.</td><td>base64-only
</td></tr><tr><td style="white-space:nowrap">XMLFILE/XMLBLOB</td><td>An XML key in the format generated by the .NET RSA class: <var>RSA.ToXmlString(true)</var>.</td><td>base64 or plain text.</td></tr></table></center><p />


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHServer" desc="CData Python Connector for MySQL - RSBMysql - SSHServer: The SSH server.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHServer</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHServer">
<p>The SSH server.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The SSH server.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHPort" desc="CData Python Connector for MySQL - RSBMysql - SSHPort: The SSH port.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHPort</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHPort">
<p>The SSH port.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"22"</p>

<h3>Remarks</h3>


<p>The SSH port.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHUser" desc="CData Python Connector for MySQL - RSBMysql - SSHUser: The SSH user.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHUser</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHUser">
<p>The SSH user.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The SSH user.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHPassword" desc="CData Python Connector for MySQL - RSBMysql - SSHPassword: The SSH password.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHPassword</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHPassword">
<p>The SSH password.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The SSH password.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - SSHServerFingerprint" desc="CData Python Connector for MySQL - RSBMysql - SSHServerFingerprint: The SSH server fingerprint.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHServerFingerprint</h1>
       
<div class="chapter_content" id="RSBMysql_p_SSHServerFingerprint">
<p>The SSH server fingerprint.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The SSH server fingerprint.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - UseSSH" desc="CData Python Connector for MySQL - RSBMysql - UseSSH: Whether to tunnel the MySQL connection over SSH. Use SSH.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>UseSSH</h1>
       
<div class="chapter_content" id="RSBMysql_p_UseSSH">
<p>Whether to tunnel the MySQL connection over SSH. Use SSH.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>By default the provider will attempt to connect directly to MySQL.
When this option is enabled, the provider will instead establish an SSH
connection with the <a href="#RSBMysql_p_SSHServer">SSHServer</a> and tunnel the connection to MySQL
through it.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Firewall" desc="CData Python Connector for MySQL - RSBMysql - Firewall: The protocol used by a proxy-based firewall.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Firewall</h1>
       
<div class="chapter_content" id="RSBMysql_c_Firewall">
<p>
<p>This section provides a complete list of the Firewall properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_FirewallType">FirewallType</a></td><td>The protocol used by a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_FirewallServer">FirewallServer</a></td><td>The name or IP address of a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_FirewallPort">FirewallPort</a></td><td>The TCP port for a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_FirewallUser">FirewallUser</a></td><td>The user name to use to authenticate with a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_FirewallPassword">FirewallPassword</a></td><td>A password used to authenticate to a proxy-based firewall.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - FirewallType" desc="CData Python Connector for MySQL - RSBMysql - FirewallType: The protocol used by a proxy-based firewall.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallType</h1>
       
<div class="chapter_content" id="RSBMysql_p_FirewallType">
<p>The protocol used by a proxy-based firewall.</p>





<h3>Possible Values</h3>
NONE, TUNNEL, SOCKS4, SOCKS5

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"NONE"</p>

<h3>Remarks</h3>


<p>This property specifies the protocol that the provider will use to tunnel traffic through the <a href="#RSBMysql_p_FirewallServer">FirewallServer</a> proxy. 

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Type</b>
    </td><td><b>Default Port</b>
  </td><td><b>Description</b>

  </td></tr><tr><td style="white-space:nowrap">TUNNEL
    </td><td>80
    </td><td>When this is set, the provider opens a connection to MySQL and traffic flows back and forth through the proxy. 

  </td></tr><tr><td style="white-space:nowrap">SOCKS4
    </td><td>1080
    </td><td>When this is set, the provider sends data through the SOCKS 4 proxy specified by <a href="#RSBMysql_p_FirewallServer">FirewallServer</a> and <a href="#RSBMysql_p_FirewallPort">FirewallPort</a> and passes the <a href="#RSBMysql_p_FirewallUser">FirewallUser</a> value to the proxy, which determines if the connection request should be granted.
  </td></tr><tr><td style="white-space:nowrap">SOCKS5
    </td><td>1080
    </td><td>When this is set, the provider sends data through the SOCKS 5 proxy specified by <a href="#RSBMysql_p_FirewallServer">FirewallServer</a> and <a href="#RSBMysql_p_FirewallPort">FirewallPort</a>. If your proxy requires authentication, set <a href="#RSBMysql_p_FirewallUser">FirewallUser</a> and <a href="#RSBMysql_p_FirewallPassword">FirewallPassword</a> to credentials the proxy recognizes.
</td></tr></table></center><p /></p>

<p>
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - FirewallServer" desc="CData Python Connector for MySQL - RSBMysql - FirewallServer: The name or IP address of a proxy-based firewall.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallServer</h1>
       
<div class="chapter_content" id="RSBMysql_p_FirewallServer">
<p>The name or IP address of a proxy-based firewall.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property specifies the IP address, DNS name, or host name of a proxy allowing traversal of a firewall. The protocol is specified by <a href="#RSBMysql_p_FirewallType">FirewallType</a>: Use <u>FirewallServer</u> with this property to connect through SOCKS or do tunneling. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - FirewallPort" desc="CData Python Connector for MySQL - RSBMysql - FirewallPort: The TCP port for a proxy-based firewall.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallPort</h1>
       
<div class="chapter_content" id="RSBMysql_p_FirewallPort">
<p>The TCP port for a proxy-based firewall.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>0</p>

<h3>Remarks</h3>


<p>This specifies the TCP port for a proxy allowing traversal of a firewall. Use <a href="#RSBMysql_p_FirewallServer">FirewallServer</a> to specify the name or IP address. Specify the protocol with <a href="#RSBMysql_p_FirewallType">FirewallType</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - FirewallUser" desc="CData Python Connector for MySQL - RSBMysql - FirewallUser: The user name to use to authenticate with a proxy-based firewall.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallUser</h1>
       
<div class="chapter_content" id="RSBMysql_p_FirewallUser">
<p>The user name to use to authenticate with a proxy-based firewall.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <u>FirewallUser</u> and <a href="#RSBMysql_p_FirewallPassword">FirewallPassword</a> properties are used to authenticate against the proxy specified in <a href="#RSBMysql_p_FirewallServer">FirewallServer</a> and <a href="#RSBMysql_p_FirewallPort">FirewallPort</a>, following the authentication method specified in <a href="#RSBMysql_p_FirewallType">FirewallType</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - FirewallPassword" desc="CData Python Connector for MySQL - RSBMysql - FirewallPassword: A password used to authenticate to a proxy-based firewall.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallPassword</h1>
       
<div class="chapter_content" id="RSBMysql_p_FirewallPassword">
<p>A password used to authenticate to a proxy-based firewall.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property is passed to the proxy specified by <a href="#RSBMysql_p_FirewallServer">FirewallServer</a> and <a href="#RSBMysql_p_FirewallPort">FirewallPort</a>, following the authentication method specified by <a href="#RSBMysql_p_FirewallType">FirewallType</a>.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Proxy" desc="CData Python Connector for MySQL - RSBMysql - Proxy: This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Proxy</h1>
       
<div class="chapter_content" id="RSBMysql_c_Proxy">
<p>
<p>This section provides a complete list of the Proxy properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_ProxyAutoDetect">ProxyAutoDetect</a></td><td>This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyServer">ProxyServer</a></td><td>The hostname or IP address of a proxy to route HTTP traffic through.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyPort">ProxyPort</a></td><td>The TCP port the ProxyServer proxy is running on.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyAuthScheme">ProxyAuthScheme</a></td><td>The authentication type to use to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyUser">ProxyUser</a></td><td>A user name to be used to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyPassword">ProxyPassword</a></td><td>A password to be used to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxySSLType">ProxySSLType</a></td><td>The SSL type to use when connecting to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ProxyExceptions">ProxyExceptions</a></td><td>A semicolon separated list of destination hostnames or IPs that are exempt from connecting through the ProxyServer .</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ProxyAutoDetect" desc="CData Python Connector for MySQL - RSBMysql - ProxyAutoDetect: This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyAutoDetect</h1>
       
<div class="chapter_content" id="RSBMysql_p_ProxyAutoDetect">
<p>This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>true</p>

<h3>Remarks</h3>


<p>This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings. 
</p>

<p>
</p>

<p>


</p>

<p>To connect to an HTTP proxy, see <a href="#RSBMysql_p_ProxyServer">ProxyServer</a>. For other proxies, such as SOCKS or tunneling, see <a href="#RSBMysql_p_FirewallType">FirewallType</a>.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ProxyServer" desc="CData Python Connector for MySQL - RSBMysql - ProxyServer: The hostname or IP address of a proxy to route HTTP traffic through.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyServer</h1>
       
<div class="chapter_content" id="RSBMysql_p_ProxyServer">
<p>The hostname or IP address of a proxy to route HTTP traffic through.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The hostname or IP address of a proxy to route HTTP traffic through. The provider can use the HTTP, Windows (NTLM), or Kerberos authentication types to authenticate to an HTTP proxy. </p>

<p>If you need to connect through a SOCKS proxy or tunnel the connection, see <a href="#RSBMysql_p_FirewallType">FirewallType</a>.</p>

<p>By default, the provider uses the system proxy. If you need to use another proxy, set <a href="#RSBMysql_p_ProxyAutoDetect">ProxyAutoDetect</a> to false. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ProxyPort" desc="CData Python Connector for MySQL - RSBMysql - ProxyPort: The TCP port the ProxyServer proxy is running on.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyPort</h1>
       
<div class="chapter_content" id="RSBMysql_p_ProxyPort">
<p>The TCP port the ProxyServer proxy is running on.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>80</p>

<h3>Remarks</h3>


<p>The port the HTTP proxy is running on that you want to redirect HTTP traffic through. Specify the HTTP proxy in <a href="#RSBMysql_p_ProxyServer">ProxyServer</a>. For other proxy types, see <a href="#RSBMysql_p_FirewallType">FirewallType</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ProxyAuthScheme" desc="CData Python Connector for MySQL - RSBMysql - ProxyAuthScheme: The authentication type to use to authenticate to the ProxyServer proxy.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyAuthScheme</h1>
       
<div class="chapter_content" id="RSBMysql_p_ProxyAuthScheme">
<p>The authentication type to use to authenticate to the ProxyServer proxy.</p>





<h3>Possible Values</h3>
BASIC, DIGEST, NONE, NEGOTIATE, NTLM, PROPRIETARY

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"BASIC"</p>

<h3>Remarks</h3>


<p>This value specifies the authentication type to use to authenticate to the HTTP proxy specified by <a href="#RSBMysql_p_ProxyServer">ProxyServer</a> and <a href="#RSBMysql_p_ProxyPort">ProxyPort</a>. </p>

<p>Note that the provider will use the system proxy settings by default, without further configuration needed; if you want to connect to another proxy, you will need to set <a href="#RSBMysql_p_ProxyAutoDetect">ProxyAutoDetect</a> to false, in addition to <a href="#RSBMysql_p_ProxyServer">ProxyServer</a> and <a href="#RSBMysql_p_ProxyPort">ProxyPort</a>. To authenticate, set <u>ProxyAuthScheme</u> and set <a href="#RSBMysql_p_ProxyUser">ProxyUser</a> and <a href="#RSBMysql_p_ProxyPassword">ProxyPassword</a>, if needed.</p>

<p>The authentication type can be one of the following:
<ul><li><b>BASIC:</b> The provider performs HTTP BASIC authentication.</li><li><b>DIGEST:</b> The provider performs HTTP DIGEST authentication.</li><li><b>NEGOTIATE:</b> The provider retrieves an NTLM or Kerberos token based on the applicable protocol for authentication. </li><li><b>PROPRIETARY:</b> The provider does not generate an NTLM or Kerberos token. You must supply this token in the Authorization header of the HTTP request.</li></ul>
</p>

<p>If you need to use another authentication type, such as SOCKS 5 authentication, see <a href="#RSBMysql_p_FirewallType">FirewallType</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ProxyUser" desc="CData Python Connector for MySQL - RSBMysql - ProxyUser: A user name to be used to authenticate to the ProxyServer proxy.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyUser</h1>
       
<div class="chapter_content" id="RSBMysql_p_ProxyUser">
<p>A user name to be used to authenticate to the ProxyServer proxy.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <u>ProxyUser</u> and <a href="#RSBMysql_p_ProxyPassword">ProxyPassword</a> options are used to connect and authenticate against the HTTP proxy specified in <a href="#RSBMysql_p_ProxyServer">ProxyServer</a>.</p>

<p>You can select one of the available authentication types in <a href="#RSBMysql_p_ProxyAuthScheme">ProxyAuthScheme</a>. If you are using HTTP authentication, set this to the user name of a user recognized by the HTTP proxy. If you are using Windows or Kerberos authentication, set this property to a user name in one of the following formats:
<br/><pre lang="">user@domain
domain\user</pre>
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ProxyPassword" desc="CData Python Connector for MySQL - RSBMysql - ProxyPassword: A password to be used to authenticate to the ProxyServer proxy.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyPassword</h1>
       
<div class="chapter_content" id="RSBMysql_p_ProxyPassword">
<p>A password to be used to authenticate to the ProxyServer proxy.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property is used to authenticate to an HTTP proxy server that supports NTLM (Windows), Kerberos, or HTTP authentication. To specify the HTTP proxy, you can set <a href="#RSBMysql_p_ProxyServer">ProxyServer</a> and <a href="#RSBMysql_p_ProxyPort">ProxyPort</a>. To specify the authentication type, set <a href="#RSBMysql_p_ProxyAuthScheme">ProxyAuthScheme</a>. </p>

<p>If you are using HTTP authentication, additionally set <a href="#RSBMysql_p_ProxyUser">ProxyUser</a> and <u>ProxyPassword</u> to  HTTP proxy. </p>

<p>If you are using NTLM authentication, set <a href="#RSBMysql_p_ProxyUser">ProxyUser</a> and <u>ProxyPassword</u> to your Windows password. You may also need these to complete Kerberos authentication.</p>

<p>For SOCKS 5 authentication or tunneling, see <a href="#RSBMysql_p_FirewallType">FirewallType</a>.</p>

<p>By default, the provider uses the system proxy. If you want to connect to another proxy, set <a href="#RSBMysql_p_ProxyAutoDetect">ProxyAutoDetect</a> to false. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ProxySSLType" desc="CData Python Connector for MySQL - RSBMysql - ProxySSLType: The SSL type to use when connecting to the ProxyServer proxy.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxySSLType</h1>
       
<div class="chapter_content" id="RSBMysql_p_ProxySSLType">
<p>The SSL type to use when connecting to the ProxyServer proxy.</p>





<h3>Possible Values</h3>
AUTO, ALWAYS, NEVER, TUNNEL

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"AUTO"</p>

<h3>Remarks</h3>


<p>This property determines when to use SSL for the connection to an HTTP proxy specified by <a href="#RSBMysql_p_ProxyServer">ProxyServer</a>. This value can be AUTO, ALWAYS, NEVER, or TUNNEL. The applicable values are the following:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>AUTO</b></td><td>Default setting. If the URL is an HTTPS URL, the provider will use the TUNNEL option. If the URL is an HTTP URL, the component will use the NEVER option.</td></tr><tr><td style="white-space:nowrap"><b>ALWAYS</b></td><td>The connection is always SSL enabled.</td></tr><tr><td style="white-space:nowrap"><b>NEVER</b></td><td>The connection is not SSL enabled.</td></tr><tr><td style="white-space:nowrap"><b>TUNNEL</b></td><td>The connection is through a tunneling proxy. The proxy server opens a connection to the remote host and traffic flows back and forth through the proxy.</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ProxyExceptions" desc="CData Python Connector for MySQL - RSBMysql - ProxyExceptions: A semicolon separated list of destination hostnames or IPs that are exempt from connecting through the ProxyServer .">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyExceptions</h1>
       
<div class="chapter_content" id="RSBMysql_p_ProxyExceptions">
<p>A semicolon separated list of destination hostnames or IPs that are exempt from connecting through the ProxyServer .</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <a href="#RSBMysql_p_ProxyServer">ProxyServer</a> is used for all addresses, except for addresses defined in this property. Use semicolons to separate entries.</p>

<p>Note that the provider uses the system proxy settings by default, without further configuration needed; if you want to explicitly configure proxy exceptions for this connection, you need to set <a href="#RSBMysql_p_ProxyAutoDetect">ProxyAutoDetect</a> = false, and configure <a href="#RSBMysql_p_ProxyServer">ProxyServer</a> and <a href="#RSBMysql_p_ProxyPort">ProxyPort</a>. To authenticate, set <a href="#RSBMysql_p_ProxyAuthScheme">ProxyAuthScheme</a> and set <a href="#RSBMysql_p_ProxyUser">ProxyUser</a> and <a href="#RSBMysql_p_ProxyPassword">ProxyPassword</a>, if needed.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Logging" desc="CData Python Connector for MySQL - RSBMysql - Logging: A filepath which designates the name and location of the log file.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Logging</h1>
       
<div class="chapter_content" id="RSBMysql_c_Logging">
<p>
<p>This section provides a complete list of the Logging properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_Logfile">Logfile</a></td><td>A filepath which designates the name and location of the log file.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Verbosity">Verbosity</a></td><td>The verbosity level that determines the amount of detail included in the log file.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_LogModules">LogModules</a></td><td>Core modules to be included in the log file.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_MaxLogFileSize">MaxLogFileSize</a></td><td>A string specifying the maximum size in bytes for a log file (for example, 10 MB).</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_MaxLogFileCount">MaxLogFileCount</a></td><td>A string specifying the maximum file count of log files.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Logfile" desc="CData Python Connector for MySQL - RSBMysql - Logfile: A filepath which designates the name and location of the log file.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Logfile</h1>
       
<div class="chapter_content" id="RSBMysql_p_Logfile">
<p>A filepath which designates the name and location of the log file.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Once this property is set, the provider will populate the log file as it carries out various tasks, such as when authentication is performed or queries are executed. If the specified file doesn't already exist, it will be created.</p>

<p>Connection strings and version information are also logged, though connection properties containing sensitive information are masked automatically.</p>

<p>If a relative filepath is supplied, the location of the log file will be resolved based on the path found in the <a href="#RSBMysql_p_Location">Location</a> connection property.</p>

<p>For more control over what is written to the log file, you can adjust the <a href="#RSBMysql_p_Verbosity">Verbosity</a> property.</p>

<p>Log contents are categorized into several modules. You can show/hide individual modules using the <a href="#RSBMysql_p_LogModules">LogModules</a> property.</p>

<p>To edit the maximum size of a single logfile before a new one is created, see <a href="#RSBMysql_p_MaxLogFileSize">MaxLogFileSize</a>.</p>

<p>If you would like to place a cap on the number of logfiles generated, use <a href="#RSBMysql_p_MaxLogFileCount">MaxLogFileCount</a>.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Verbosity" desc="CData Python Connector for MySQL - RSBMysql - Verbosity: The verbosity level that determines the amount of detail included in the log file.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Verbosity</h1>
       
<div class="chapter_content" id="RSBMysql_p_Verbosity">
<p>The verbosity level that determines the amount of detail included in the log file.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"1"</p>

<h3>Remarks</h3>


<p>The verbosity level determines the amount of detail that the provider reports to the <a href="#RSBMysql_p_Logfile">Logfile</a>. <u>Verbosity</u> levels from 1 to 5 are supported. These are detailed in the <a href="#pg_advancedlogging">Logging</a> page.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - LogModules" desc="CData Python Connector for MySQL - RSBMysql - LogModules: Core modules to be included in the log file.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>LogModules</h1>
       
<div class="chapter_content" id="RSBMysql_p_LogModules">
<p>Core modules to be included in the log file.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Only the modules specified (separated by ';') will be included in the log file. By default all modules are included.</p>

<p>See the <a href="#pg_advancedlogging">Logging</a> page for an overview.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - MaxLogFileSize" desc="CData Python Connector for MySQL - RSBMysql - MaxLogFileSize: A string specifying the maximum size in bytes for a log file (for example, 10 MB).">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>MaxLogFileSize</h1>
       
<div class="chapter_content" id="RSBMysql_p_MaxLogFileSize">
<p>A string specifying the maximum size in bytes for a log file (for example, 10 MB).</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"100MB"</p>

<h3>Remarks</h3>


<p>When the limit is hit, a new log is created in the same folder with the date and time appended to the end. The default limit is 100 MB. Values lower than 100 kB will use 100 kB as the value instead.</p>

<p>Adjust the maximum number of logfiles generated with <a href="#RSBMysql_p_MaxLogFileCount">MaxLogFileCount</a>.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - MaxLogFileCount" desc="CData Python Connector for MySQL - RSBMysql - MaxLogFileCount: A string specifying the maximum file count of log files.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>MaxLogFileCount</h1>
       
<div class="chapter_content" id="RSBMysql_p_MaxLogFileCount">
<p>A string specifying the maximum file count of log files.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>-1</p>

<h3>Remarks</h3>


<p>When the limit is hit, a new log is created in the same folder with the date and time appended to the end and the oldest log file will be deleted.</p>

<p>The minimum supported value is 2. A value of 0 or a negative value indicates no limit on the count.</p>

<p>Adjust the maximum size of the logfiles generated with <a href="#RSBMysql_p_MaxLogFileSize">MaxLogFileSize</a>.</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Schema" desc="CData Python Connector for MySQL - RSBMysql - Schema: A path to the directory that contains the schema files defining tables, views, and stored procedures.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Schema</h1>
       
<div class="chapter_content" id="RSBMysql_c_Schema">
<p>
<p>This section provides a complete list of the Schema properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_Location">Location</a></td><td>A path to the directory that contains the schema files defining tables, views, and stored procedures.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_BrowsableSchemas">BrowsableSchemas</a></td><td>This property restricts the schemas reported to a subset of the available schemas. For example, BrowsableSchemas=SchemaA,SchemaB,SchemaC.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Tables">Tables</a></td><td>This property restricts the tables reported to a subset of the available tables. For example, Tables=TableA,TableB,TableC.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Views">Views</a></td><td>Restricts the views reported to a subset of the available tables. For example, Views=ViewA,ViewB,ViewC.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Location" desc="CData Python Connector for MySQL - RSBMysql - Location: A path to the directory that contains the schema files defining tables, views, and stored procedures.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Location</h1>
       
<div class="chapter_content" id="RSBMysql_p_Location">
<p>A path to the directory that contains the schema files defining tables, views, and stored procedures.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"%APPDATA%\\CData\\MySQL Data Provider\\Schema"</p>

<h3>Remarks</h3>


<p>The path to a directory which contains the schema files for the provider (.rsd files for tables and views, .rsb files for stored procedures). The folder location can be a relative path from the location of the executable. The <u>Location</u> property is only needed if you want to customize definitions (for example, change a column name, ignore a column, and so on) or extend the data model with new tables, views, or stored procedures.

</p>

<p>If left unspecified, the default location is "%APPDATA%\\CData\\MySQL Data Provider\\Schema" with <b>%APPDATA%</b> being set to the user's configuration directory:




<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Platform</b> </td><td><b>%APPDATA%</b></td></tr><tr><td style="white-space:nowrap">Windows </td><td>The value of the APPDATA environment variable</td></tr><tr><td style="white-space:nowrap">Linux </td><td>~/.config</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - BrowsableSchemas" desc="CData Python Connector for MySQL - RSBMysql - BrowsableSchemas: This property restricts the schemas reported to a subset of the available schemas. For example, BrowsableSchemas=SchemaA,SchemaB,SchemaC.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>BrowsableSchemas</h1>
       
<div class="chapter_content" id="RSBMysql_p_BrowsableSchemas">
<p>This property restricts the schemas reported to a subset of the available schemas. For example, BrowsableSchemas=SchemaA,SchemaB,SchemaC.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Listing the schemas from databases can be expensive. Providing a list of schemas in the connection string improves 
the performance.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Tables" desc="CData Python Connector for MySQL - RSBMysql - Tables: This property restricts the tables reported to a subset of the available tables. For example, Tables=TableA,TableB,TableC.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Tables</h1>
       
<div class="chapter_content" id="RSBMysql_p_Tables">
<p>This property restricts the tables reported to a subset of the available tables. For example, Tables=TableA,TableB,TableC.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Listing the tables from some databases can be expensive. Providing a list of tables in the connection string improves 
the performance of the provider.</p>

<p>This property can also be used as an alternative to automatically listing views if you already know which ones you want to work with and there would otherwise be too many to work with.</p>

<p>Specify the tables you want in a comma-separated list. Each table should be a valid SQL identifier with any special characters
escaped using square brackets, double-quotes or backticks. For example, Tables=TableA,[TableB/WithSlash],WithCatalog.WithSchema.`TableC With Space`. </p>

<p>Note that when connecting to a data source with multiple schemas or catalogs, you will need to provide the fully qualified name of the table in this property, as in the last example here, to avoid ambiguity between tables that exist in multiple catalogs or schemas.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Views" desc="CData Python Connector for MySQL - RSBMysql - Views: Restricts the views reported to a subset of the available tables. For example, Views=ViewA,ViewB,ViewC.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Views</h1>
       
<div class="chapter_content" id="RSBMysql_p_Views">
<p>Restricts the views reported to a subset of the available tables. For example, Views=ViewA,ViewB,ViewC.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Listing the views from some databases can be expensive. Providing a list of views in the connection string improves the performance of the provider. </p>

<p>This property can also be used as an alternative to automatically listing views if you already know which ones you want to work with and there would otherwise be too many to work with.
</p>

<p>Specify the views you want in a comma-separated list. Each view should be a valid SQL identifier with any special characters
escaped using square brackets, double-quotes or backticks. For example, Views=ViewA,[ViewB/WithSlash],WithCatalog.WithSchema.`ViewC With Space`. </p>

<p>Note that when connecting to a data source with multiple schemas or catalogs, you will need to provide the fully qualified name of the table in this property, as in the last example here, to avoid ambiguity between tables that exist in multiple catalogs or schemas.</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Caching" desc="CData Python Connector for MySQL - RSBMysql - Caching: Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Caching</h1>
       
<div class="chapter_content" id="RSBMysql_c_Caching">
<p>
<p>This section provides a complete list of the Caching properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AutoCache">AutoCache</a></td><td>Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheProvider">CacheProvider</a></td><td>The name of the provider to be used to cache data.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheDriver">CacheDriver</a></td><td>The database driver used to cache data.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheConnection">CacheConnection</a></td><td>The connection string for the cache database. This property is always used in conjunction with CacheProvider . Setting both properties will override the value set for CacheLocation for caching data.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheLocation">CacheLocation</a></td><td>Specifies the path to the cache when caching to a file.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheTolerance">CacheTolerance</a></td><td>The tolerance for stale data in the cache specified in seconds when using AutoCache .</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Offline">Offline</a></td><td>Use offline mode to get the data from the cache instead of the live source.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_CacheMetadata">CacheMetadata</a></td><td>This property determines whether or not to cache the table metadata to a file store.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - AutoCache" desc="CData Python Connector for MySQL - RSBMysql - AutoCache: Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AutoCache</h1>
       
<div class="chapter_content" id="RSBMysql_p_AutoCache">
<p>Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>When <u>AutoCache</u> = true, the provider automatically maintains a cache of your table's data in the database of your choice. </p>

<p>

<h3>Setting the Caching Database</h3>
</p>

<p>When <u>AutoCache</u> = true, the provider caches to a simple, file-based cache. You can configure its location or cache to a different database with the following properties:
<ul><li><a href="#RSBMysql_p_CacheLocation">CacheLocation</a>: Specifies the path to the file store.</li><li><a href="#RSBMysql_p_CacheProvider">CacheProvider</a> and <a href="#RSBMysql_p_CacheConnection">CacheConnection</a>: Specifies a driver to a database and the connection string.</li></ul></p>

<p>

<h3>See Also</h3>
</p>

<p><ul><li><a href="#RSBMysql_p_CacheMetadata">CacheMetadata</a>: This property reduces the amount of metadata that crosses the network by persisting table schemas retrieved from the MySQL metadata. Metadata then needs to be retrieved only once instead of every connection.</li><li><a href="#pg_cacheExplicitly">Explicitly Caching Data</a>: This section provides more examples of using <u>AutoCache</u> in <a href="#RSBMysql_p_Offline">Offline</a> mode.</li><li><a href="#pg_cache">CACHE Statements</a>: You can use the CACHE statement to persist any SELECT query, as well as manage the cache; for example, refreshing schemas.</li></ul></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - CacheProvider" desc="CData Python Connector for MySQL - RSBMysql - CacheProvider: The name of the provider to be used to cache data.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheProvider</h1>
       
<div class="chapter_content" id="RSBMysql_p_CacheProvider">
<p>The name of the provider to be used to cache data.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>You can cache to any database for which you have an ADO.NET provider. The caching database is determined based on the CacheProvider and <a href="#RSBMysql_p_CacheConnection">CacheConnection</a> properties.</p>

<p>The following sections show connection examples and address other requirements for several popular database drivers. Refer to <a href="#RSBMysql_p_CacheConnection">CacheConnection</a> for more information on typical connection properties.


<h3>Loading the Caching Database's Driver</h3>
</p>

<p>The CacheProvider property specifies the name of the DbProviderFactory used to cache data. You can find the provider factories available to you in your machine.config.


<h3>SQLite</h3>
</p>

<p>
The provider simplifies SQLite configuration; in most caching scenarios, you need to specify only the <a href="#RSBMysql_p_CacheLocation">CacheLocation</a>.
<br/><pre lang="plain">CacheLocation=C:\\Users\\Public\\cache.db;User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;</pre>



<h3>MySQL</h3>



To cache to MySQL, you can use the included CData ADO.NET Provider for MySQL:
<br/><pre lang="plain">Cache Provider=System.Data.CData.MySQL;Cache Connection='Server=localhost;Port=3306;Database=cache;User=root;Password=123456';User=myUser;Password=myPassword;Security Token=myToken;</pre>

 


<h3>SQL Server</h3>
</p>

<p>
You can use the Microsoft .NET Framework Provider for SQL Server, included in the .NET Framework, to cache to SQL Server:
<br/><pre lang="plain">Cache Provider=System.Data.SqlClient;Cache Connection="Server=MyMACHINE\MyInstance;Database=SQLCACHE;User Id=root;Password=admin";User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;</pre>



<h3>Oracle</h3>
</p>

<p>
To cache to Oracle, you can use the Oracle Data Provider for .NET, as shown in the following example:
<br/><pre lang="plain">Cache Provider=Oracle.DataAccess.Client;Cache Connection='User Id=scott;Password=tiger;Data Source=ORCL';User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;</pre></p>

<p>The Oracle Data Provider for .NET also requires the Oracle Database Client. When you download the Oracle Database Client, ensure that the bitness matches the the bitness of your machine. When you install select either the Runtime or Administrator installation type;, the Instant Client is not sufficient. 

 


<h3>PostgreSQL</h3>



To cache to PostgreSQL, you can use the included CData ADO.NET Provider for PostgreSQL:
<br/><pre lang="plain">Cache Provider=System.Data.CData.PostgreSQL;Cache Connection='Server=localhost;Port=5432;Database=cache;User=postgres;Password=123456';User=myUser;Password=myPassword;Security Token=myToken;</pre>

 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - CacheDriver" desc="CData Python Connector for MySQL - RSBMysql - CacheDriver: The database driver used to cache data.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheDriver</h1>
       
<div class="chapter_content" id="RSBMysql_p_CacheDriver">
<p>The database driver used to cache data.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>You can cache to any database for which you have a JDBC driver, including CData JDBC drivers.</p>

<p>The cache database is determined by the <u>CacheDriver</u> and <a href="#RSBMysql_p_CacheConnection">CacheConnection</a> properties. The <u>CacheDriver</u> is the name of the JDBC driver class that you want to use to cache data. </p>

<p><b>Note:</b> you must add the <u>CacheDriver</u> JAR file to the classpath. 

For Linux systems and macOS, you need to create a config.ini file on the installation path of the driver (<var>site-packages/cdata</var>). 

The config.ini file has the following format (the driver and the path of the JDBC driver):
<br/><pre lang="">[salesforce.cpython-38-x86_64-linux-gnu.so]
CLASSPATH = /home/usrname/Downloads/lib/cdata.jdbc.postgresql.jar</pre>
</p>

<p>
<h2>Examples</h2>

The following examples show how to cache to several major databases. Refer to <a href="#RSBMysql_p_CacheConnection">CacheConnection</a> for more information on the JDBC URL syntax and typical connection properties.


<h3>Derby and Java DB</h3>
</p>

<p></p>

<p>The provider simplifies Derby configuration. Java DB is the Oracle distribution of Derby. The JAR file is shipped in the JDK. You can find the JAR file, derby.jar, in the db subfolder of the JDK installation. In most caching scenarios, you need to specify only the following, after adding derby.jar to the classpath:
<br/><pre lang="">jdbc:mysql:CacheLocation='c:/Temp/cachedir';User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;</pre>
To customize the Derby JDBC URL, use <u>CacheDriver</u> and <a href="#RSBMysql_p_CacheConnection">CacheConnection</a>. For example, to cache to an in-memory database, use a JDBC URL like the following:
<br/><pre lang="">jdbc:mysql:CacheDriver=org.apache.derby.jdbc.EmbeddedDriver;CacheConnection='jdbc:derby:memory';User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;</pre>


<h3>SQLite</h3>
</p>

<p>The following is a JDBC URL for the SQLite JDBC driver: 
<br/><pre lang="plain">jdbc:mysql:CacheDriver=org.sqlite.JDBC;CacheConnection='jdbc:sqlite:C:/Temp/sqlite.db';User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;</pre>

  
<h3>MySQL</h3>

  </p>

<p>The following is a JDBC URL for the included CData JDBC Driver for MySQL:
  <br/><pre lang="plain">  jdbc:mysql:Cache Driver=cdata.jdbc.mysql.MySQLDriver;Cache Connection='jdbc:mysql:Server=localhost;Port=3306;Database=cache;User=root;Password=123456';User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;
  </pre>



<h3>SQL Server</h3>
</p>

<p>The following JDBC URL uses the Microsoft JDBC Driver for SQL Server:

<br/><pre lang="plain">jdbc:mysql:Cache Driver=com.microsoft.sqlserver.jdbc.SQLServerDriver;Cache Connection='jdbc:sqlserver://localhost\sqlexpress:7437;user=sa;password=123456;databaseName=Cache';User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;</pre>



<h3>Oracle</h3>
</p>

<p>The following is a JDBC URL for the Oracle Thin Client:
<br/><pre lang="plain">jdbc:mysql:Cache Driver=oracle.jdbc.OracleDriver;CacheConnection='jdbc:oracle:thin:scott/tiger@localhost:1521:orcldb';User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;</pre>
NOTE: If using a version of Oracle older than 9i, the cache driver will instead be oracle.jdbc.driver.OracleDriver .



<h3>PostgreSQL</h3>
</p>

<p>The following JDBC URL uses the official PostgreSQL JDBC driver:
<br/><pre lang="plain">jdbc:mysql:CacheDriver=cdata.jdbc.postgresql.PostgreSQLDriver;CacheConnection='jdbc:postgresql:User=postgres;Password=admin;Database=postgres;Server=localhost;Port=5432;';User=myUser;Password=myPassword;Database=NorthWind;Server=myServer;Port=3306;</pre>


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - CacheConnection" desc="CData Python Connector for MySQL - RSBMysql - CacheConnection: The connection string for the cache database. This property is always used in conjunction with CacheProvider . Setting both properties will override the value set for CacheLocation for caching data.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheConnection</h1>
       
<div class="chapter_content" id="RSBMysql_p_CacheConnection">
<p>The connection string for the cache database. This property is always used in conjunction with CacheProvider . Setting both properties will override the value set for CacheLocation for caching data.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The cache database is determined based on the <a href="#RSBMysql_p_CacheProvider">CacheProvider</a> and <u>CacheConnection</u> properties. Both properties are required to use the cache database. Examples of common cache database settings can be found below. For more information on setting the caching database's driver, refer to <a href="#RSBMysql_p_CacheProvider">CacheProvider</a>.</p>

<p>The connection string specified in the <u>CacheConnection</u> property is passed directly to the underlying <a href="#RSBMysql_p_CacheProvider">CacheProvider</a>. Consult the documentation for the specific  for more information on the available properties. </p>

<p>
</p>

<p>
<h3>SQLite</h3>
</p>

<p></p>

<p>
<h3>MySQL</h3>
</p>

<p> 
The following are typical connection properties:</p>

<p><ul><li><b>Server</b>: The IP address or domain name of the server you want to connect to.</li><li><b>Port</b>: The port that the server is running on.</li><li><b>User</b>: The user name provided for authentication to the database.</li><li><b>Password</b>: The password provided for authentication to the database.</li><li><b>Database</b>: The name of the database.</li></ul>

<h3>SQL Server</h3>
</p>

<p>The following are typical SQL Server connection properties:
<ul><li><b>Server</b>: The name or network address of the computer running SQL Server. To connect to a named instance instead of the default instance, this property can be used to specify the host name and the instance, separated by a backslash. </li><li><b>Port</b>: The port SQL Server is running on.</li><li><b>Database</b>: The name of the SQL Server database. </li><li><b>Integrated Security</b>: Set this option to true to use the current Windows account for authentication. Set this option to false if you are setting the User and Password in the connection.</li><li><b>User Id</b>: The user name provided for authentication with SQL Server. This property is only needed if you are not using integrated security.</li><li><b>Password</b>: The password provided for authentication with SQL Server. This property is only needed if you are not using integrated security.</li></ul>



<h3>Oracle</h3>
</p>

<p>The following are typical connection properties:
<ul><li>
<p><b>Data Source</b>: The connect descriptor that identifies the Oracle database. This can be a TNS connect descriptor, an Oracle Net Services name that resolves to a connect descriptor, or, after version 11g, an Easy Connect naming (the host name of the Oracle server with an optional port and service name).</p>
</li><li><b>Password</b>: The password provided for authentication with the Oracle database.</li><li><b>User Id</b>: The user Id provided for authentication with the Oracle database.</li></ul>


<h3>PostgreSQL</h3>
</p>

<p>The following are typical connection properties:
<ul><li><b>Host</b>: The address of the server hosting the PostgreSQL database.</li><li><b>Port</b>: The port used to connect to the server hosting the PostgreSQL database.</li><li><b>Database</b>: The name of the database.</li><li><b>User name</b>: The user Id provided for authentication with the PostgreSQL database. </li><li><b>Password</b>: The password provided for authentication with the PostgreSQL database.</li></ul>


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - CacheLocation" desc="CData Python Connector for MySQL - RSBMysql - CacheLocation: Specifies the path to the cache when caching to a file.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheLocation</h1>
       
<div class="chapter_content" id="RSBMysql_p_CacheLocation">
<p>Specifies the path to the cache when caching to a file.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"%APPDATA%\\CData\\MySQL Data Provider"</p>

<h3>Remarks</h3>


<p>The <u>CacheLocation</u> is a simple, file-based cache. </p>

<p></p>

<p>If left unspecified, the default location is "%APPDATA%\\CData\\MySQL Data Provider" with <b>%APPDATA%</b> being set to the user's configuration directory:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Platform</b> </td><td><b>%APPDATA%</b></td></tr><tr><td style="white-space:nowrap">Windows </td><td>The value of the APPDATA environment variable</td></tr><tr><td style="white-space:nowrap">Linux </td><td>~/.config</td></tr></table></center><p />


<h3>See Also</h3>
</p>

<p><ul><li><a href="#RSBMysql_p_AutoCache">AutoCache</a>: Set to implicitly create and maintain a cache for later offline use. </li><li><a href="#RSBMysql_p_CacheMetadata">CacheMetadata</a>: Set to persist the MySQL catalog in <u>CacheLocation</u>.</li></ul>


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - CacheTolerance" desc="CData Python Connector for MySQL - RSBMysql - CacheTolerance: The tolerance for stale data in the cache specified in seconds when using AutoCache .">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheTolerance</h1>
       
<div class="chapter_content" id="RSBMysql_p_CacheTolerance">
<p>The tolerance for stale data in the cache specified in seconds when using AutoCache .</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>600</p>

<h3>Remarks</h3>


<p>The tolerance for stale data in the cache specified in seconds. This only applies when <a href="#RSBMysql_p_AutoCache">AutoCache</a> is used. The provider checks with the data source for newer records after the tolerance interval has expired. Otherwise, it returns the data directly from the cache.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Offline" desc="CData Python Connector for MySQL - RSBMysql - Offline: Use offline mode to get the data from the cache instead of the live source.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Offline</h1>
       
<div class="chapter_content" id="RSBMysql_p_Offline">
<p>Use offline mode to get the data from the cache instead of the live source.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>When <u>Offline</u> = true, all queries execute against the cache as opposed to the live data source. In this mode, certain queries like INSERT, UPDATE, DELETE, and CACHE are not allowed. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - CacheMetadata" desc="CData Python Connector for MySQL - RSBMysql - CacheMetadata: This property determines whether or not to cache the table metadata to a file store.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheMetadata</h1>
       
<div class="chapter_content" id="RSBMysql_p_CacheMetadata">
<p>This property determines whether or not to cache the table metadata to a file store.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>As you execute queries with this property set, table metadata in the MySQL catalog are cached to the file store specified by <a href="#RSBMysql_p_CacheLocation">CacheLocation</a> if set or the user's home directory otherwise. A table's metadata will be retrieved only once, when the table is queried for the first time.


<h3>When to Use CacheMetadata</h3>
</p>

<p>The provider automatically persists metadata in memory for up to two hours when you first discover the metadata for a table or view and therefore, <u>CacheMetadata</u> is generally not required. <u>CacheMetadata</u> becomes useful when metadata operations are expensive such as when you are working with large amounts of metadata or when you have many short-lived connections.


<h3>When Not to Use CacheMetadata</h3>
</p>

<p> 
<ul><li><b>When you are working with volatile metadata</b>: Metadata for a table is only retrieved the first time the connection to the table is made. To pick up new, changed, or deleted columns, you would need to delete and rebuild the metadata cache. Therefore, it is best to rely on the in-memory caching for cases where metadata changes often.</li><li><b>When you are caching to a database</b>: <u>CacheMetadata</u> can only be used with <a href="#RSBMysql_p_CacheLocation">CacheLocation</a>. If you are caching to another database with the <a href="#RSBMysql_p_CacheProvider">CacheProvider</a> and <a href="#RSBMysql_p_CacheConnection">CacheConnection</a> properties, use <a href="#RSBMysql_p_AutoCache">AutoCache</a> to cache implicitly. Or, use  <a href="#pg_cache">CACHE Statements</a> to cache explicitly. </li></ul>


</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Miscellaneous" desc="CData Python Connector for MySQL - RSBMysql - Miscellaneous: When set to True, user variables (prefixed by an @) can be used in SQL queries.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Miscellaneous</h1>
       
<div class="chapter_content" id="RSBMysql_c_Miscellaneous">
<p>
<p>This section provides a complete list of the Miscellaneous properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBMysql_p_AllowUserVariables">AllowUserVariables</a></td><td>When set to True, user variables (prefixed by an @) can be used in SQL queries.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Characterset">Characterset</a></td><td>The default client character set used by the provider. For example, 'utf8'.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_MaxRows">MaxRows</a></td><td>Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Other">Other</a></td><td>These hidden properties are used only in specific use cases.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_QueryPassthrough">QueryPassthrough</a></td><td>This option passes the query to the MySQL server as is.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Readonly">Readonly</a></td><td>You can use this property to enforce read-only access to MySQL from the provider.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_RTK">RTK</a></td><td>The runtime key used for licensing.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ServerTimeZone">ServerTimeZone</a></td><td>Specify a specific server time zone id of current platform(.Net or Java) by user.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_Timeout">Timeout</a></td><td>The value in seconds until the connection timeout error is thrown.</td></tr>

<tr valign="top"><td><a href="#RSBMysql_p_ZeroDatesToNull">ZeroDatesToNull</a></td><td>Whether or not to return Date and DateTime values consisting of all zeros as NULL.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - AllowUserVariables" desc="CData Python Connector for MySQL - RSBMysql - AllowUserVariables: When set to True, user variables (prefixed by an @) can be used in SQL queries.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AllowUserVariables</h1>
       
<div class="chapter_content" id="RSBMysql_p_AllowUserVariables">
<p>When set to True, user variables (prefixed by an @) can be used in SQL queries.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>When set to True, user variables (prefixed by an @) can be used in SQL queries. The default behavior is to treat identifiers prefixed with @ as command parameters.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Characterset" desc="CData Python Connector for MySQL - RSBMysql - Characterset: The default client character set used by the provider. For example, 'utf8'.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Characterset</h1>
       
<div class="chapter_content" id="RSBMysql_p_Characterset">
<p>The default client character set used by the provider. For example, 'utf8'.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>By default the client character set is determined from the server's language
settings, but you can override that value by setting this option. This can be
useful if you need to use a specific encoding or collation in your queries.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - MaxRows" desc="CData Python Connector for MySQL - RSBMysql - MaxRows: Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>MaxRows</h1>
       
<div class="chapter_content" id="RSBMysql_p_MaxRows">
<p>Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>-1</p>

<h3>Remarks</h3>


<p>Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Other" desc="CData Python Connector for MySQL - RSBMysql - Other: These hidden properties are used only in specific use cases.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Other</h1>
       
<div class="chapter_content" id="RSBMysql_p_Other">
<p>These hidden properties are used only in specific use cases.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The properties listed below are available for specific use cases. Normal driver use cases and functionality should not require these properties.</p>

<p>Specify multiple properties in a semicolon-separated list.



<h3>Integration and Formatting</h3>

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">DefaultColumnSize</td><td>Sets the default length of string fields when the data source does not provide column length in the metadata. The default value is 2000.
</td></tr><tr><td style="white-space:nowrap">ConvertDateTimeToGMT</td><td>Determines whether to convert date-time values to GMT, instead of the local time of the machine.
</td></tr><tr><td style="white-space:nowrap">RecordToFile=filename</td><td>Records the underlying socket data transfer to the specified file.
</td></tr></table></center><p />

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - QueryPassthrough" desc="CData Python Connector for MySQL - RSBMysql - QueryPassthrough: This option passes the query to the MySQL server as is.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>QueryPassthrough</h1>
       
<div class="chapter_content" id="RSBMysql_p_QueryPassthrough">
<p>This option passes the query to the MySQL server as is.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>true</p>

<h3>Remarks</h3>


<p>When this is set, queries are passed through directly to MySQL. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Readonly" desc="CData Python Connector for MySQL - RSBMysql - Readonly: You can use this property to enforce read-only access to MySQL from the provider.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Readonly</h1>
       
<div class="chapter_content" id="RSBMysql_p_Readonly">
<p>You can use this property to enforce read-only access to MySQL from the provider.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>If this property is set to true, the provider will allow only SELECT queries. INSERT, UPDATE, DELETE, and stored procedure queries will cause an error to be thrown.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - RTK" desc="CData Python Connector for MySQL - RSBMysql - RTK: The runtime key used for licensing.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>RTK</h1>
       
<div class="chapter_content" id="RSBMysql_p_RTK">
<p>The runtime key used for licensing.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>
  </p>

<p>The RTK property may be used to license a build.



  </p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ServerTimeZone" desc="CData Python Connector for MySQL - RSBMysql - ServerTimeZone: Specify a specific server time zone id of current platform(.Net or Java) by user.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ServerTimeZone</h1>
       
<div class="chapter_content" id="RSBMysql_p_ServerTimeZone">
<p>Specify a specific server time zone id of current platform(.Net or Java) by user.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Specify a specific server time zone id of current platform(.Net or Java) by user. When set to LOCAL, we assume the server timezone is the same as local, and don't apply any timezone conversion.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - Timeout" desc="CData Python Connector for MySQL - RSBMysql - Timeout: The value in seconds until the connection timeout error is thrown.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Timeout</h1>
       
<div class="chapter_content" id="RSBMysql_p_Timeout">
<p>The value in seconds until the connection timeout error is thrown.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>30</p>

<h3>Remarks</h3>


<p>If <u>Timeout</u> is 0, operations do not time out. The operations run until they complete successfully or until they encounter an error condition.
</p>

<p>If <u>Timeout</u> expires and the operation is not yet complete, the provider throws an exception.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData Python Connector for MySQL - ZeroDatesToNull" desc="CData Python Connector for MySQL - RSBMysql - ZeroDatesToNull: Whether or not to return Date and DateTime values consisting of all zeros as NULL.">CData Python Connector for MySQL</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ZeroDatesToNull</h1>
       
<div class="chapter_content" id="RSBMysql_p_ZeroDatesToNull">
<p>Whether or not to return Date and DateTime values consisting of all zeros as NULL.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>true</p>

<h3>Remarks</h3>


<p>Whether or not to return Date and DateTime values consisting of all zeros as NULL. A value of all zeros indicates an invalid Date or DateTime value in MySQL. Retrieving such a value may cause parsing errors unless you set this property to True.

</p>

</div>
















    </div></div></div><div class="right-table-of-contents"></div>

    
            </div>
        </div>
        <div>

				<div id='whfooter'>
					<div class=content>
            						Copyright (c) 2023 CData Software, Inc. - All rights reserved.
            
            
						<div class='build'>Build 23.0.8565</div>
					</div>&nbsp;
				</div>
        </div>
    </div>
	
	          <script type="text/javascript" src="./lib/jquery-3.5.1.min.js"></script>
      <script type="text/javascript" src="./lib/bootstrap/bootstrap.min.js"></script>
      <script type="text/javascript" src="./lib/syntaxhighlighter-3.0.83/scripts/XRegExp.js"></script>	
      <script type="text/javascript" src="./lib/syntaxhighlighter-3.0.83/scripts/shCore.js"></script>
      <script type="text/javascript" src="./lib/syntaxhighlighter-3.0.83/scripts/shAutoloader.js"></script>
      <script type="text/javascript" src="./lib/help2.js"></script>
    
		<script type="text/javascript">
			function setScrollBar() {
			  var treeHeight = $("#whtoc>ul").height();
			  var treePerentHeight = $("#whsizer").height();
			  if (treeHeight > treePerentHeight) {
				$("#whsizer").css("overflow-y", "scroll");
			  } else {
				$("#whsizer").css("overflow-y", "hidden");
			  }
			}
			
			function loadTree() {
			//   $("#whsizer").css({ "position": "fixed"});
			  $("#whtoc").addClass("tree");
			  $('#whtoc.tree li:has(ul)').addClass('parent_li').prepend("<span class='ygtvtp' title='Expand this branch'></span>");
			  $('#whtoc.tree li:not(.parent_li)').prepend("<span class='ygtvln'></span>");
			  $("#whtoc").show();
			  $('#whtoc.tree li.parent_li > span').on('click', function (e) {
				var children = $(this).parent('li.parent_li').find(' > ul > li');
				if (children.is(":visible")) {
				  children.hide();
				  $(this).attr('title', 'Expand this branch').addClass('ygtvtp').removeClass('ygtvlm');
				} else {
					children.show();
				  $(this).attr('title', 'Collapse this branch').addClass('ygtvlm').removeClass('ygtvtp');
				}
			
				var height = $("#whtoc").height();
				$("#resizerCol").css("height", 0 + "px"); //disable resizer 
				setScrollBar();
				e.stopPropagation();
			  });
			  setScrollBar();
			}
			
			loadTree();
		</script>
		
		
	</body></html>






